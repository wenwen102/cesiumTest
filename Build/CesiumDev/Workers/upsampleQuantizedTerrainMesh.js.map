{"version":3,"file":"upsampleQuantizedTerrainMesh.js","sources":["../../../packages/engine/Source/Core/Intersections2D.js","../../../packages/engine/Source/WorkersES6/upsampleQuantizedTerrainMesh.js"],"sourcesContent":["import Cartesian2 from \"./Cartesian2.js\";\r\nimport Cartesian3 from \"./Cartesian3.js\";\r\nimport Check from \"./Check.js\";\r\nimport defined from \"./defined.js\";\r\nimport DeveloperError from \"./DeveloperError.js\";\r\n\r\n/**\r\n * Contains functions for operating on 2D triangles.\r\n *\r\n * @namespace Intersections2D\r\n */\r\nconst Intersections2D = {};\r\n\r\n/**\r\n * Splits a 2D triangle at given axis-aligned threshold value and returns the resulting\r\n * polygon on a given side of the threshold.  The resulting polygon may have 0, 1, 2,\r\n * 3, or 4 vertices.\r\n *\r\n * @param {Number} threshold The threshold coordinate value at which to clip the triangle.\r\n * @param {Boolean} keepAbove true to keep the portion of the triangle above the threshold, or false\r\n *                            to keep the portion below.\r\n * @param {Number} u0 The coordinate of the first vertex in the triangle, in counter-clockwise order.\r\n * @param {Number} u1 The coordinate of the second vertex in the triangle, in counter-clockwise order.\r\n * @param {Number} u2 The coordinate of the third vertex in the triangle, in counter-clockwise order.\r\n * @param {Number[]} [result] The array into which to copy the result.  If this parameter is not supplied,\r\n *                            a new array is constructed and returned.\r\n * @returns {Number[]} The polygon that results after the clip, specified as a list of\r\n *                     vertices.  The vertices are specified in counter-clockwise order.\r\n *                     Each vertex is either an index from the existing list (identified as\r\n *                     a 0, 1, or 2) or -1 indicating a new vertex not in the original triangle.\r\n *                     For new vertices, the -1 is followed by three additional numbers: the\r\n *                     index of each of the two original vertices forming the line segment that\r\n *                     the new vertex lies on, and the fraction of the distance from the first\r\n *                     vertex to the second one.\r\n *\r\n * @example\r\n * const result = Cesium.Intersections2D.clipTriangleAtAxisAlignedThreshold(0.5, false, 0.2, 0.6, 0.4);\r\n * // result === [2, 0, -1, 1, 0, 0.25, -1, 1, 2, 0.5]\r\n */\r\nIntersections2D.clipTriangleAtAxisAlignedThreshold = function (\r\n  threshold,\r\n  keepAbove,\r\n  u0,\r\n  u1,\r\n  u2,\r\n  result\r\n) {\r\n  //>>includeStart('debug', pragmas.debug);\r\n  if (!defined(threshold)) {\r\n    throw new DeveloperError(\"threshold is required.\");\r\n  }\r\n  if (!defined(keepAbove)) {\r\n    throw new DeveloperError(\"keepAbove is required.\");\r\n  }\r\n  if (!defined(u0)) {\r\n    throw new DeveloperError(\"u0 is required.\");\r\n  }\r\n  if (!defined(u1)) {\r\n    throw new DeveloperError(\"u1 is required.\");\r\n  }\r\n  if (!defined(u2)) {\r\n    throw new DeveloperError(\"u2 is required.\");\r\n  }\r\n  //>>includeEnd('debug');\r\n\r\n  if (!defined(result)) {\r\n    result = [];\r\n  } else {\r\n    result.length = 0;\r\n  }\r\n\r\n  let u0Behind;\r\n  let u1Behind;\r\n  let u2Behind;\r\n  if (keepAbove) {\r\n    u0Behind = u0 < threshold;\r\n    u1Behind = u1 < threshold;\r\n    u2Behind = u2 < threshold;\r\n  } else {\r\n    u0Behind = u0 > threshold;\r\n    u1Behind = u1 > threshold;\r\n    u2Behind = u2 > threshold;\r\n  }\r\n\r\n  const numBehind = u0Behind + u1Behind + u2Behind;\r\n\r\n  let u01Ratio;\r\n  let u02Ratio;\r\n  let u12Ratio;\r\n  let u10Ratio;\r\n  let u20Ratio;\r\n  let u21Ratio;\r\n\r\n  if (numBehind === 1) {\r\n    if (u0Behind) {\r\n      u01Ratio = (threshold - u0) / (u1 - u0);\r\n      u02Ratio = (threshold - u0) / (u2 - u0);\r\n\r\n      result.push(1);\r\n\r\n      result.push(2);\r\n\r\n      if (u02Ratio !== 1.0) {\r\n        result.push(-1);\r\n        result.push(0);\r\n        result.push(2);\r\n        result.push(u02Ratio);\r\n      }\r\n\r\n      if (u01Ratio !== 1.0) {\r\n        result.push(-1);\r\n        result.push(0);\r\n        result.push(1);\r\n        result.push(u01Ratio);\r\n      }\r\n    } else if (u1Behind) {\r\n      u12Ratio = (threshold - u1) / (u2 - u1);\r\n      u10Ratio = (threshold - u1) / (u0 - u1);\r\n\r\n      result.push(2);\r\n\r\n      result.push(0);\r\n\r\n      if (u10Ratio !== 1.0) {\r\n        result.push(-1);\r\n        result.push(1);\r\n        result.push(0);\r\n        result.push(u10Ratio);\r\n      }\r\n\r\n      if (u12Ratio !== 1.0) {\r\n        result.push(-1);\r\n        result.push(1);\r\n        result.push(2);\r\n        result.push(u12Ratio);\r\n      }\r\n    } else if (u2Behind) {\r\n      u20Ratio = (threshold - u2) / (u0 - u2);\r\n      u21Ratio = (threshold - u2) / (u1 - u2);\r\n\r\n      result.push(0);\r\n\r\n      result.push(1);\r\n\r\n      if (u21Ratio !== 1.0) {\r\n        result.push(-1);\r\n        result.push(2);\r\n        result.push(1);\r\n        result.push(u21Ratio);\r\n      }\r\n\r\n      if (u20Ratio !== 1.0) {\r\n        result.push(-1);\r\n        result.push(2);\r\n        result.push(0);\r\n        result.push(u20Ratio);\r\n      }\r\n    }\r\n  } else if (numBehind === 2) {\r\n    if (!u0Behind && u0 !== threshold) {\r\n      u10Ratio = (threshold - u1) / (u0 - u1);\r\n      u20Ratio = (threshold - u2) / (u0 - u2);\r\n\r\n      result.push(0);\r\n\r\n      result.push(-1);\r\n      result.push(1);\r\n      result.push(0);\r\n      result.push(u10Ratio);\r\n\r\n      result.push(-1);\r\n      result.push(2);\r\n      result.push(0);\r\n      result.push(u20Ratio);\r\n    } else if (!u1Behind && u1 !== threshold) {\r\n      u21Ratio = (threshold - u2) / (u1 - u2);\r\n      u01Ratio = (threshold - u0) / (u1 - u0);\r\n\r\n      result.push(1);\r\n\r\n      result.push(-1);\r\n      result.push(2);\r\n      result.push(1);\r\n      result.push(u21Ratio);\r\n\r\n      result.push(-1);\r\n      result.push(0);\r\n      result.push(1);\r\n      result.push(u01Ratio);\r\n    } else if (!u2Behind && u2 !== threshold) {\r\n      u02Ratio = (threshold - u0) / (u2 - u0);\r\n      u12Ratio = (threshold - u1) / (u2 - u1);\r\n\r\n      result.push(2);\r\n\r\n      result.push(-1);\r\n      result.push(0);\r\n      result.push(2);\r\n      result.push(u02Ratio);\r\n\r\n      result.push(-1);\r\n      result.push(1);\r\n      result.push(2);\r\n      result.push(u12Ratio);\r\n    }\r\n  } else if (numBehind !== 3) {\r\n    // Completely in front of threshold\r\n    result.push(0);\r\n    result.push(1);\r\n    result.push(2);\r\n  }\r\n  // else Completely behind threshold\r\n\r\n  return result;\r\n};\r\n\r\n/**\r\n * Compute the barycentric coordinates of a 2D position within a 2D triangle.\r\n *\r\n * @param {Number} x The x coordinate of the position for which to find the barycentric coordinates.\r\n * @param {Number} y The y coordinate of the position for which to find the barycentric coordinates.\r\n * @param {Number} x1 The x coordinate of the triangle's first vertex.\r\n * @param {Number} y1 The y coordinate of the triangle's first vertex.\r\n * @param {Number} x2 The x coordinate of the triangle's second vertex.\r\n * @param {Number} y2 The y coordinate of the triangle's second vertex.\r\n * @param {Number} x3 The x coordinate of the triangle's third vertex.\r\n * @param {Number} y3 The y coordinate of the triangle's third vertex.\r\n * @param {Cartesian3} [result] The instance into to which to copy the result.  If this parameter\r\n *                     is undefined, a new instance is created and returned.\r\n * @returns {Cartesian3} The barycentric coordinates of the position within the triangle.\r\n *\r\n * @example\r\n * const result = Cesium.Intersections2D.computeBarycentricCoordinates(0.0, 0.0, 0.0, 1.0, -1, -0.5, 1, -0.5);\r\n * // result === new Cesium.Cartesian3(1.0 / 3.0, 1.0 / 3.0, 1.0 / 3.0);\r\n */\r\nIntersections2D.computeBarycentricCoordinates = function (\r\n  x,\r\n  y,\r\n  x1,\r\n  y1,\r\n  x2,\r\n  y2,\r\n  x3,\r\n  y3,\r\n  result\r\n) {\r\n  //>>includeStart('debug', pragmas.debug);\r\n  if (!defined(x)) {\r\n    throw new DeveloperError(\"x is required.\");\r\n  }\r\n  if (!defined(y)) {\r\n    throw new DeveloperError(\"y is required.\");\r\n  }\r\n  if (!defined(x1)) {\r\n    throw new DeveloperError(\"x1 is required.\");\r\n  }\r\n  if (!defined(y1)) {\r\n    throw new DeveloperError(\"y1 is required.\");\r\n  }\r\n  if (!defined(x2)) {\r\n    throw new DeveloperError(\"x2 is required.\");\r\n  }\r\n  if (!defined(y2)) {\r\n    throw new DeveloperError(\"y2 is required.\");\r\n  }\r\n  if (!defined(x3)) {\r\n    throw new DeveloperError(\"x3 is required.\");\r\n  }\r\n  if (!defined(y3)) {\r\n    throw new DeveloperError(\"y3 is required.\");\r\n  }\r\n  //>>includeEnd('debug');\r\n\r\n  const x1mx3 = x1 - x3;\r\n  const x3mx2 = x3 - x2;\r\n  const y2my3 = y2 - y3;\r\n  const y1my3 = y1 - y3;\r\n  const inverseDeterminant = 1.0 / (y2my3 * x1mx3 + x3mx2 * y1my3);\r\n  const ymy3 = y - y3;\r\n  const xmx3 = x - x3;\r\n  const l1 = (y2my3 * xmx3 + x3mx2 * ymy3) * inverseDeterminant;\r\n  const l2 = (-y1my3 * xmx3 + x1mx3 * ymy3) * inverseDeterminant;\r\n  const l3 = 1.0 - l1 - l2;\r\n\r\n  if (defined(result)) {\r\n    result.x = l1;\r\n    result.y = l2;\r\n    result.z = l3;\r\n    return result;\r\n  }\r\n  return new Cartesian3(l1, l2, l3);\r\n};\r\n\r\n/**\r\n * Compute the intersection between 2 line segments\r\n *\r\n * @param {Number} x00 The x coordinate of the first line's first vertex.\r\n * @param {Number} y00 The y coordinate of the first line's first vertex.\r\n * @param {Number} x01 The x coordinate of the first line's second vertex.\r\n * @param {Number} y01 The y coordinate of the first line's second vertex.\r\n * @param {Number} x10 The x coordinate of the second line's first vertex.\r\n * @param {Number} y10 The y coordinate of the second line's first vertex.\r\n * @param {Number} x11 The x coordinate of the second line's second vertex.\r\n * @param {Number} y11 The y coordinate of the second line's second vertex.\r\n * @param {Cartesian2} [result] The instance into to which to copy the result. If this parameter\r\n *                     is undefined, a new instance is created and returned.\r\n * @returns {Cartesian2} The intersection point, undefined if there is no intersection point or lines are coincident.\r\n *\r\n * @example\r\n * const result = Cesium.Intersections2D.computeLineSegmentLineSegmentIntersection(0.0, 0.0, 0.0, 2.0, -1, 1, 1, 1);\r\n * // result === new Cesium.Cartesian2(0.0, 1.0);\r\n */\r\nIntersections2D.computeLineSegmentLineSegmentIntersection = function (\r\n  x00,\r\n  y00,\r\n  x01,\r\n  y01,\r\n  x10,\r\n  y10,\r\n  x11,\r\n  y11,\r\n  result\r\n) {\r\n  //>>includeStart('debug', pragmas.debug);\r\n  Check.typeOf.number(\"x00\", x00);\r\n  Check.typeOf.number(\"y00\", y00);\r\n  Check.typeOf.number(\"x01\", x01);\r\n  Check.typeOf.number(\"y01\", y01);\r\n  Check.typeOf.number(\"x10\", x10);\r\n  Check.typeOf.number(\"y10\", y10);\r\n  Check.typeOf.number(\"x11\", x11);\r\n  Check.typeOf.number(\"y11\", y11);\r\n  //>>includeEnd('debug');\r\n\r\n  const numerator1A = (x11 - x10) * (y00 - y10) - (y11 - y10) * (x00 - x10);\r\n  const numerator1B = (x01 - x00) * (y00 - y10) - (y01 - y00) * (x00 - x10);\r\n  const denominator1 = (y11 - y10) * (x01 - x00) - (x11 - x10) * (y01 - y00);\r\n\r\n  // If denominator = 0, then lines are parallel. If denominator = 0 and both numerators are 0, then coincident\r\n  if (denominator1 === 0) {\r\n    return;\r\n  }\r\n\r\n  const ua1 = numerator1A / denominator1;\r\n  const ub1 = numerator1B / denominator1;\r\n\r\n  if (ua1 >= 0 && ua1 <= 1 && ub1 >= 0 && ub1 <= 1) {\r\n    if (!defined(result)) {\r\n      result = new Cartesian2();\r\n    }\r\n\r\n    result.x = x00 + ua1 * (x01 - x00);\r\n    result.y = y00 + ua1 * (y01 - y00);\r\n\r\n    return result;\r\n  }\r\n};\r\nexport default Intersections2D;\r\n","import AttributeCompression from \"../Core/AttributeCompression.js\";\r\nimport BoundingSphere from \"../Core/BoundingSphere.js\";\r\nimport Cartesian2 from \"../Core/Cartesian2.js\";\r\nimport Cartesian3 from \"../Core/Cartesian3.js\";\r\nimport Cartographic from \"../Core/Cartographic.js\";\r\nimport defined from \"../Core/defined.js\";\r\nimport Ellipsoid from \"../Core/Ellipsoid.js\";\r\nimport EllipsoidalOccluder from \"../Core/EllipsoidalOccluder.js\";\r\nimport IndexDatatype from \"../Core/IndexDatatype.js\";\r\nimport Intersections2D from \"../Core/Intersections2D.js\";\r\nimport CesiumMath from \"../Core/Math.js\";\r\nimport OrientedBoundingBox from \"../Core/OrientedBoundingBox.js\";\r\nimport Rectangle from \"../Core/Rectangle.js\";\r\nimport TerrainEncoding from \"../Core/TerrainEncoding.js\";\r\nimport createTaskProcessorWorker from \"./createTaskProcessorWorker.js\";\r\n\r\nconst maxShort = 32767;\r\nconst halfMaxShort = (maxShort / 2) | 0;\r\n\r\nconst clipScratch = [];\r\nconst clipScratch2 = [];\r\nconst verticesScratch = [];\r\nconst cartographicScratch = new Cartographic();\r\nlet cartesian3Scratch = new Cartesian3();\r\nconst uScratch = [];\r\nconst vScratch = [];\r\nconst heightScratch = [];\r\nconst indicesScratch = [];\r\nconst normalsScratch = [];\r\nconst horizonOcclusionPointScratch = new Cartesian3();\r\nconst boundingSphereScratch = new BoundingSphere();\r\nconst orientedBoundingBoxScratch = new OrientedBoundingBox();\r\nconst decodeTexCoordsScratch = new Cartesian2();\r\nconst octEncodedNormalScratch = new Cartesian3();\r\n\r\nfunction upsampleQuantizedTerrainMesh(parameters, transferableObjects) {\r\n  const isEastChild = parameters.isEastChild;\r\n  const isNorthChild = parameters.isNorthChild;\r\n\r\n  const minU = isEastChild ? halfMaxShort : 0;\r\n  const maxU = isEastChild ? maxShort : halfMaxShort;\r\n  const minV = isNorthChild ? halfMaxShort : 0;\r\n  const maxV = isNorthChild ? maxShort : halfMaxShort;\r\n\r\n  const uBuffer = uScratch;\r\n  const vBuffer = vScratch;\r\n  const heightBuffer = heightScratch;\r\n  const normalBuffer = normalsScratch;\r\n\r\n  uBuffer.length = 0;\r\n  vBuffer.length = 0;\r\n  heightBuffer.length = 0;\r\n  normalBuffer.length = 0;\r\n\r\n  const indices = indicesScratch;\r\n  indices.length = 0;\r\n\r\n  const vertexMap = {};\r\n\r\n  const parentVertices = parameters.vertices;\r\n  let parentIndices = parameters.indices;\r\n  parentIndices = parentIndices.subarray(0, parameters.indexCountWithoutSkirts);\r\n\r\n  const encoding = TerrainEncoding.clone(parameters.encoding);\r\n  const hasVertexNormals = encoding.hasVertexNormals;\r\n\r\n  let vertexCount = 0;\r\n  const quantizedVertexCount = parameters.vertexCountWithoutSkirts;\r\n\r\n  const parentMinimumHeight = parameters.minimumHeight;\r\n  const parentMaximumHeight = parameters.maximumHeight;\r\n\r\n  const parentUBuffer = new Array(quantizedVertexCount);\r\n  const parentVBuffer = new Array(quantizedVertexCount);\r\n  const parentHeightBuffer = new Array(quantizedVertexCount);\r\n  const parentNormalBuffer = hasVertexNormals\r\n    ? new Array(quantizedVertexCount * 2)\r\n    : undefined;\r\n\r\n  const threshold = 20;\r\n  let height;\r\n\r\n  let i, n;\r\n  let u, v;\r\n  for (i = 0, n = 0; i < quantizedVertexCount; ++i, n += 2) {\r\n    const texCoords = encoding.decodeTextureCoordinates(\r\n      parentVertices,\r\n      i,\r\n      decodeTexCoordsScratch\r\n    );\r\n    height = encoding.decodeHeight(parentVertices, i);\r\n\r\n    u = CesiumMath.clamp((texCoords.x * maxShort) | 0, 0, maxShort);\r\n    v = CesiumMath.clamp((texCoords.y * maxShort) | 0, 0, maxShort);\r\n    parentHeightBuffer[i] = CesiumMath.clamp(\r\n      (((height - parentMinimumHeight) /\r\n        (parentMaximumHeight - parentMinimumHeight)) *\r\n        maxShort) |\r\n        0,\r\n      0,\r\n      maxShort\r\n    );\r\n\r\n    if (u < threshold) {\r\n      u = 0;\r\n    }\r\n\r\n    if (v < threshold) {\r\n      v = 0;\r\n    }\r\n\r\n    if (maxShort - u < threshold) {\r\n      u = maxShort;\r\n    }\r\n\r\n    if (maxShort - v < threshold) {\r\n      v = maxShort;\r\n    }\r\n\r\n    parentUBuffer[i] = u;\r\n    parentVBuffer[i] = v;\r\n\r\n    if (hasVertexNormals) {\r\n      const encodedNormal = encoding.getOctEncodedNormal(\r\n        parentVertices,\r\n        i,\r\n        octEncodedNormalScratch\r\n      );\r\n      parentNormalBuffer[n] = encodedNormal.x;\r\n      parentNormalBuffer[n + 1] = encodedNormal.y;\r\n    }\r\n\r\n    if (\r\n      ((isEastChild && u >= halfMaxShort) ||\r\n        (!isEastChild && u <= halfMaxShort)) &&\r\n      ((isNorthChild && v >= halfMaxShort) ||\r\n        (!isNorthChild && v <= halfMaxShort))\r\n    ) {\r\n      vertexMap[i] = vertexCount;\r\n      uBuffer.push(u);\r\n      vBuffer.push(v);\r\n      heightBuffer.push(parentHeightBuffer[i]);\r\n      if (hasVertexNormals) {\r\n        normalBuffer.push(parentNormalBuffer[n]);\r\n        normalBuffer.push(parentNormalBuffer[n + 1]);\r\n      }\r\n\r\n      ++vertexCount;\r\n    }\r\n  }\r\n\r\n  const triangleVertices = [];\r\n  triangleVertices.push(new Vertex());\r\n  triangleVertices.push(new Vertex());\r\n  triangleVertices.push(new Vertex());\r\n\r\n  const clippedTriangleVertices = [];\r\n  clippedTriangleVertices.push(new Vertex());\r\n  clippedTriangleVertices.push(new Vertex());\r\n  clippedTriangleVertices.push(new Vertex());\r\n\r\n  let clippedIndex;\r\n  let clipped2;\r\n\r\n  for (i = 0; i < parentIndices.length; i += 3) {\r\n    const i0 = parentIndices[i];\r\n    const i1 = parentIndices[i + 1];\r\n    const i2 = parentIndices[i + 2];\r\n\r\n    const u0 = parentUBuffer[i0];\r\n    const u1 = parentUBuffer[i1];\r\n    const u2 = parentUBuffer[i2];\r\n\r\n    triangleVertices[0].initializeIndexed(\r\n      parentUBuffer,\r\n      parentVBuffer,\r\n      parentHeightBuffer,\r\n      parentNormalBuffer,\r\n      i0\r\n    );\r\n    triangleVertices[1].initializeIndexed(\r\n      parentUBuffer,\r\n      parentVBuffer,\r\n      parentHeightBuffer,\r\n      parentNormalBuffer,\r\n      i1\r\n    );\r\n    triangleVertices[2].initializeIndexed(\r\n      parentUBuffer,\r\n      parentVBuffer,\r\n      parentHeightBuffer,\r\n      parentNormalBuffer,\r\n      i2\r\n    );\r\n\r\n    // Clip triangle on the east-west boundary.\r\n    const clipped = Intersections2D.clipTriangleAtAxisAlignedThreshold(\r\n      halfMaxShort,\r\n      isEastChild,\r\n      u0,\r\n      u1,\r\n      u2,\r\n      clipScratch\r\n    );\r\n\r\n    // Get the first clipped triangle, if any.\r\n    clippedIndex = 0;\r\n\r\n    if (clippedIndex >= clipped.length) {\r\n      continue;\r\n    }\r\n    clippedIndex = clippedTriangleVertices[0].initializeFromClipResult(\r\n      clipped,\r\n      clippedIndex,\r\n      triangleVertices\r\n    );\r\n\r\n    if (clippedIndex >= clipped.length) {\r\n      continue;\r\n    }\r\n    clippedIndex = clippedTriangleVertices[1].initializeFromClipResult(\r\n      clipped,\r\n      clippedIndex,\r\n      triangleVertices\r\n    );\r\n\r\n    if (clippedIndex >= clipped.length) {\r\n      continue;\r\n    }\r\n    clippedIndex = clippedTriangleVertices[2].initializeFromClipResult(\r\n      clipped,\r\n      clippedIndex,\r\n      triangleVertices\r\n    );\r\n\r\n    // Clip the triangle against the North-south boundary.\r\n    clipped2 = Intersections2D.clipTriangleAtAxisAlignedThreshold(\r\n      halfMaxShort,\r\n      isNorthChild,\r\n      clippedTriangleVertices[0].getV(),\r\n      clippedTriangleVertices[1].getV(),\r\n      clippedTriangleVertices[2].getV(),\r\n      clipScratch2\r\n    );\r\n    addClippedPolygon(\r\n      uBuffer,\r\n      vBuffer,\r\n      heightBuffer,\r\n      normalBuffer,\r\n      indices,\r\n      vertexMap,\r\n      clipped2,\r\n      clippedTriangleVertices,\r\n      hasVertexNormals\r\n    );\r\n\r\n    // If there's another vertex in the original clipped result,\r\n    // it forms a second triangle.  Clip it as well.\r\n    if (clippedIndex < clipped.length) {\r\n      clippedTriangleVertices[2].clone(clippedTriangleVertices[1]);\r\n      clippedTriangleVertices[2].initializeFromClipResult(\r\n        clipped,\r\n        clippedIndex,\r\n        triangleVertices\r\n      );\r\n\r\n      clipped2 = Intersections2D.clipTriangleAtAxisAlignedThreshold(\r\n        halfMaxShort,\r\n        isNorthChild,\r\n        clippedTriangleVertices[0].getV(),\r\n        clippedTriangleVertices[1].getV(),\r\n        clippedTriangleVertices[2].getV(),\r\n        clipScratch2\r\n      );\r\n      addClippedPolygon(\r\n        uBuffer,\r\n        vBuffer,\r\n        heightBuffer,\r\n        normalBuffer,\r\n        indices,\r\n        vertexMap,\r\n        clipped2,\r\n        clippedTriangleVertices,\r\n        hasVertexNormals\r\n      );\r\n    }\r\n  }\r\n\r\n  const uOffset = isEastChild ? -maxShort : 0;\r\n  const vOffset = isNorthChild ? -maxShort : 0;\r\n\r\n  const westIndices = [];\r\n  const southIndices = [];\r\n  const eastIndices = [];\r\n  const northIndices = [];\r\n\r\n  let minimumHeight = Number.MAX_VALUE;\r\n  let maximumHeight = -minimumHeight;\r\n\r\n  const cartesianVertices = verticesScratch;\r\n  cartesianVertices.length = 0;\r\n\r\n  const ellipsoid = Ellipsoid.clone(parameters.ellipsoid);\r\n  const rectangle = Rectangle.clone(parameters.childRectangle);\r\n\r\n  const north = rectangle.north;\r\n  const south = rectangle.south;\r\n  let east = rectangle.east;\r\n  const west = rectangle.west;\r\n\r\n  if (east < west) {\r\n    east += CesiumMath.TWO_PI;\r\n  }\r\n\r\n  for (i = 0; i < uBuffer.length; ++i) {\r\n    u = Math.round(uBuffer[i]);\r\n    if (u <= minU) {\r\n      westIndices.push(i);\r\n      u = 0;\r\n    } else if (u >= maxU) {\r\n      eastIndices.push(i);\r\n      u = maxShort;\r\n    } else {\r\n      u = u * 2 + uOffset;\r\n    }\r\n\r\n    uBuffer[i] = u;\r\n\r\n    v = Math.round(vBuffer[i]);\r\n    if (v <= minV) {\r\n      southIndices.push(i);\r\n      v = 0;\r\n    } else if (v >= maxV) {\r\n      northIndices.push(i);\r\n      v = maxShort;\r\n    } else {\r\n      v = v * 2 + vOffset;\r\n    }\r\n\r\n    vBuffer[i] = v;\r\n\r\n    height = CesiumMath.lerp(\r\n      parentMinimumHeight,\r\n      parentMaximumHeight,\r\n      heightBuffer[i] / maxShort\r\n    );\r\n    if (height < minimumHeight) {\r\n      minimumHeight = height;\r\n    }\r\n    if (height > maximumHeight) {\r\n      maximumHeight = height;\r\n    }\r\n\r\n    heightBuffer[i] = height;\r\n\r\n    cartographicScratch.longitude = CesiumMath.lerp(west, east, u / maxShort);\r\n    cartographicScratch.latitude = CesiumMath.lerp(south, north, v / maxShort);\r\n    cartographicScratch.height = height;\r\n\r\n    ellipsoid.cartographicToCartesian(cartographicScratch, cartesian3Scratch);\r\n\r\n    cartesianVertices.push(cartesian3Scratch.x);\r\n    cartesianVertices.push(cartesian3Scratch.y);\r\n    cartesianVertices.push(cartesian3Scratch.z);\r\n  }\r\n\r\n  const boundingSphere = BoundingSphere.fromVertices(\r\n    cartesianVertices,\r\n    Cartesian3.ZERO,\r\n    3,\r\n    boundingSphereScratch\r\n  );\r\n  const orientedBoundingBox = OrientedBoundingBox.fromRectangle(\r\n    rectangle,\r\n    minimumHeight,\r\n    maximumHeight,\r\n    ellipsoid,\r\n    orientedBoundingBoxScratch\r\n  );\r\n\r\n  const occluder = new EllipsoidalOccluder(ellipsoid);\r\n  const horizonOcclusionPoint = occluder.computeHorizonCullingPointFromVerticesPossiblyUnderEllipsoid(\r\n    boundingSphere.center,\r\n    cartesianVertices,\r\n    3,\r\n    boundingSphere.center,\r\n    minimumHeight,\r\n    horizonOcclusionPointScratch\r\n  );\r\n\r\n  const heightRange = maximumHeight - minimumHeight;\r\n\r\n  const vertices = new Uint16Array(\r\n    uBuffer.length + vBuffer.length + heightBuffer.length\r\n  );\r\n\r\n  for (i = 0; i < uBuffer.length; ++i) {\r\n    vertices[i] = uBuffer[i];\r\n  }\r\n\r\n  let start = uBuffer.length;\r\n\r\n  for (i = 0; i < vBuffer.length; ++i) {\r\n    vertices[start + i] = vBuffer[i];\r\n  }\r\n\r\n  start += vBuffer.length;\r\n\r\n  for (i = 0; i < heightBuffer.length; ++i) {\r\n    vertices[start + i] =\r\n      (maxShort * (heightBuffer[i] - minimumHeight)) / heightRange;\r\n  }\r\n\r\n  const indicesTypedArray = IndexDatatype.createTypedArray(\r\n    uBuffer.length,\r\n    indices\r\n  );\r\n\r\n  let encodedNormals;\r\n  if (hasVertexNormals) {\r\n    const normalArray = new Uint8Array(normalBuffer);\r\n    transferableObjects.push(\r\n      vertices.buffer,\r\n      indicesTypedArray.buffer,\r\n      normalArray.buffer\r\n    );\r\n    encodedNormals = normalArray.buffer;\r\n  } else {\r\n    transferableObjects.push(vertices.buffer, indicesTypedArray.buffer);\r\n  }\r\n\r\n  return {\r\n    vertices: vertices.buffer,\r\n    encodedNormals: encodedNormals,\r\n    indices: indicesTypedArray.buffer,\r\n    minimumHeight: minimumHeight,\r\n    maximumHeight: maximumHeight,\r\n    westIndices: westIndices,\r\n    southIndices: southIndices,\r\n    eastIndices: eastIndices,\r\n    northIndices: northIndices,\r\n    boundingSphere: boundingSphere,\r\n    orientedBoundingBox: orientedBoundingBox,\r\n    horizonOcclusionPoint: horizonOcclusionPoint,\r\n  };\r\n}\r\n\r\nfunction Vertex() {\r\n  this.vertexBuffer = undefined;\r\n  this.index = undefined;\r\n  this.first = undefined;\r\n  this.second = undefined;\r\n  this.ratio = undefined;\r\n}\r\n\r\nVertex.prototype.clone = function (result) {\r\n  if (!defined(result)) {\r\n    result = new Vertex();\r\n  }\r\n\r\n  result.uBuffer = this.uBuffer;\r\n  result.vBuffer = this.vBuffer;\r\n  result.heightBuffer = this.heightBuffer;\r\n  result.normalBuffer = this.normalBuffer;\r\n  result.index = this.index;\r\n  result.first = this.first;\r\n  result.second = this.second;\r\n  result.ratio = this.ratio;\r\n\r\n  return result;\r\n};\r\n\r\nVertex.prototype.initializeIndexed = function (\r\n  uBuffer,\r\n  vBuffer,\r\n  heightBuffer,\r\n  normalBuffer,\r\n  index\r\n) {\r\n  this.uBuffer = uBuffer;\r\n  this.vBuffer = vBuffer;\r\n  this.heightBuffer = heightBuffer;\r\n  this.normalBuffer = normalBuffer;\r\n  this.index = index;\r\n  this.first = undefined;\r\n  this.second = undefined;\r\n  this.ratio = undefined;\r\n};\r\n\r\nVertex.prototype.initializeFromClipResult = function (\r\n  clipResult,\r\n  index,\r\n  vertices\r\n) {\r\n  let nextIndex = index + 1;\r\n\r\n  if (clipResult[index] !== -1) {\r\n    vertices[clipResult[index]].clone(this);\r\n  } else {\r\n    this.vertexBuffer = undefined;\r\n    this.index = undefined;\r\n    this.first = vertices[clipResult[nextIndex]];\r\n    ++nextIndex;\r\n    this.second = vertices[clipResult[nextIndex]];\r\n    ++nextIndex;\r\n    this.ratio = clipResult[nextIndex];\r\n    ++nextIndex;\r\n  }\r\n\r\n  return nextIndex;\r\n};\r\n\r\nVertex.prototype.getKey = function () {\r\n  if (this.isIndexed()) {\r\n    return this.index;\r\n  }\r\n  return JSON.stringify({\r\n    first: this.first.getKey(),\r\n    second: this.second.getKey(),\r\n    ratio: this.ratio,\r\n  });\r\n};\r\n\r\nVertex.prototype.isIndexed = function () {\r\n  return defined(this.index);\r\n};\r\n\r\nVertex.prototype.getH = function () {\r\n  if (defined(this.index)) {\r\n    return this.heightBuffer[this.index];\r\n  }\r\n  return CesiumMath.lerp(this.first.getH(), this.second.getH(), this.ratio);\r\n};\r\n\r\nVertex.prototype.getU = function () {\r\n  if (defined(this.index)) {\r\n    return this.uBuffer[this.index];\r\n  }\r\n  return CesiumMath.lerp(this.first.getU(), this.second.getU(), this.ratio);\r\n};\r\n\r\nVertex.prototype.getV = function () {\r\n  if (defined(this.index)) {\r\n    return this.vBuffer[this.index];\r\n  }\r\n  return CesiumMath.lerp(this.first.getV(), this.second.getV(), this.ratio);\r\n};\r\n\r\nlet encodedScratch = new Cartesian2();\r\n// An upsampled triangle may be clipped twice before it is assigned an index\r\n// In this case, we need a buffer to handle the recursion of getNormalX() and getNormalY().\r\nlet depth = -1;\r\nconst cartesianScratch1 = [new Cartesian3(), new Cartesian3()];\r\nconst cartesianScratch2 = [new Cartesian3(), new Cartesian3()];\r\nfunction lerpOctEncodedNormal(vertex, result) {\r\n  ++depth;\r\n\r\n  let first = cartesianScratch1[depth];\r\n  let second = cartesianScratch2[depth];\r\n\r\n  first = AttributeCompression.octDecode(\r\n    vertex.first.getNormalX(),\r\n    vertex.first.getNormalY(),\r\n    first\r\n  );\r\n  second = AttributeCompression.octDecode(\r\n    vertex.second.getNormalX(),\r\n    vertex.second.getNormalY(),\r\n    second\r\n  );\r\n  cartesian3Scratch = Cartesian3.lerp(\r\n    first,\r\n    second,\r\n    vertex.ratio,\r\n    cartesian3Scratch\r\n  );\r\n  Cartesian3.normalize(cartesian3Scratch, cartesian3Scratch);\r\n\r\n  AttributeCompression.octEncode(cartesian3Scratch, result);\r\n\r\n  --depth;\r\n\r\n  return result;\r\n}\r\n\r\nVertex.prototype.getNormalX = function () {\r\n  if (defined(this.index)) {\r\n    return this.normalBuffer[this.index * 2];\r\n  }\r\n\r\n  encodedScratch = lerpOctEncodedNormal(this, encodedScratch);\r\n  return encodedScratch.x;\r\n};\r\n\r\nVertex.prototype.getNormalY = function () {\r\n  if (defined(this.index)) {\r\n    return this.normalBuffer[this.index * 2 + 1];\r\n  }\r\n\r\n  encodedScratch = lerpOctEncodedNormal(this, encodedScratch);\r\n  return encodedScratch.y;\r\n};\r\n\r\nconst polygonVertices = [];\r\npolygonVertices.push(new Vertex());\r\npolygonVertices.push(new Vertex());\r\npolygonVertices.push(new Vertex());\r\npolygonVertices.push(new Vertex());\r\n\r\nfunction addClippedPolygon(\r\n  uBuffer,\r\n  vBuffer,\r\n  heightBuffer,\r\n  normalBuffer,\r\n  indices,\r\n  vertexMap,\r\n  clipped,\r\n  triangleVertices,\r\n  hasVertexNormals\r\n) {\r\n  if (clipped.length === 0) {\r\n    return;\r\n  }\r\n\r\n  let numVertices = 0;\r\n  let clippedIndex = 0;\r\n  while (clippedIndex < clipped.length) {\r\n    clippedIndex = polygonVertices[numVertices++].initializeFromClipResult(\r\n      clipped,\r\n      clippedIndex,\r\n      triangleVertices\r\n    );\r\n  }\r\n\r\n  for (let i = 0; i < numVertices; ++i) {\r\n    const polygonVertex = polygonVertices[i];\r\n    if (!polygonVertex.isIndexed()) {\r\n      const key = polygonVertex.getKey();\r\n      if (defined(vertexMap[key])) {\r\n        polygonVertex.newIndex = vertexMap[key];\r\n      } else {\r\n        const newIndex = uBuffer.length;\r\n        uBuffer.push(polygonVertex.getU());\r\n        vBuffer.push(polygonVertex.getV());\r\n        heightBuffer.push(polygonVertex.getH());\r\n        if (hasVertexNormals) {\r\n          normalBuffer.push(polygonVertex.getNormalX());\r\n          normalBuffer.push(polygonVertex.getNormalY());\r\n        }\r\n        polygonVertex.newIndex = newIndex;\r\n        vertexMap[key] = newIndex;\r\n      }\r\n    } else {\r\n      polygonVertex.newIndex = vertexMap[polygonVertex.index];\r\n      polygonVertex.uBuffer = uBuffer;\r\n      polygonVertex.vBuffer = vBuffer;\r\n      polygonVertex.heightBuffer = heightBuffer;\r\n      if (hasVertexNormals) {\r\n        polygonVertex.normalBuffer = normalBuffer;\r\n      }\r\n    }\r\n  }\r\n\r\n  if (numVertices === 3) {\r\n    // A triangle.\r\n    indices.push(polygonVertices[0].newIndex);\r\n    indices.push(polygonVertices[1].newIndex);\r\n    indices.push(polygonVertices[2].newIndex);\r\n  } else if (numVertices === 4) {\r\n    // A quad - two triangles.\r\n    indices.push(polygonVertices[0].newIndex);\r\n    indices.push(polygonVertices[1].newIndex);\r\n    indices.push(polygonVertices[2].newIndex);\r\n\r\n    indices.push(polygonVertices[0].newIndex);\r\n    indices.push(polygonVertices[2].newIndex);\r\n    indices.push(polygonVertices[3].newIndex);\r\n  }\r\n}\r\nexport default createTaskProcessorWorker(upsampleQuantizedTerrainMesh);\r\n"],"names":["defined","DeveloperError","Cartesian3","Check","Cartesian2","Cartographic","BoundingSphere","OrientedBoundingBox","TerrainEncoding","CesiumMath","Intersections2D","Ellipsoid","Rectangle","EllipsoidalOccluder","IndexDatatype","AttributeCompression"],"mappings":";;EAMA;EACA;EACA;EACA;EACA;EACA,MAAM,eAAe,GAAG,EAAE,CAAC;AAC3B;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA,eAAe,CAAC,kCAAkC,GAAG;EACrD,EAAE,SAAS;EACX,EAAE,SAAS;EACX,EAAE,EAAE;EACJ,EAAE,EAAE;EACJ,EAAE,EAAE;EACJ,EAAE,MAAM;EACR,EAAE;EACF;EACA,EAAE,IAAI,CAACA,oBAAO,CAAC,SAAS,CAAC,EAAE;EAC3B,IAAI,MAAM,IAAIC,oBAAc,CAAC,wBAAwB,CAAC,CAAC;EACvD,GAAG;EACH,EAAE,IAAI,CAACD,oBAAO,CAAC,SAAS,CAAC,EAAE;EAC3B,IAAI,MAAM,IAAIC,oBAAc,CAAC,wBAAwB,CAAC,CAAC;EACvD,GAAG;EACH,EAAE,IAAI,CAACD,oBAAO,CAAC,EAAE,CAAC,EAAE;EACpB,IAAI,MAAM,IAAIC,oBAAc,CAAC,iBAAiB,CAAC,CAAC;EAChD,GAAG;EACH,EAAE,IAAI,CAACD,oBAAO,CAAC,EAAE,CAAC,EAAE;EACpB,IAAI,MAAM,IAAIC,oBAAc,CAAC,iBAAiB,CAAC,CAAC;EAChD,GAAG;EACH,EAAE,IAAI,CAACD,oBAAO,CAAC,EAAE,CAAC,EAAE;EACpB,IAAI,MAAM,IAAIC,oBAAc,CAAC,iBAAiB,CAAC,CAAC;EAChD,GAAG;EACH;AACA;EACA,EAAE,IAAI,CAACD,oBAAO,CAAC,MAAM,CAAC,EAAE;EACxB,IAAI,MAAM,GAAG,EAAE,CAAC;EAChB,GAAG,MAAM;EACT,IAAI,MAAM,CAAC,MAAM,GAAG,CAAC,CAAC;EACtB,GAAG;AACH;EACA,EAAE,IAAI,QAAQ,CAAC;EACf,EAAE,IAAI,QAAQ,CAAC;EACf,EAAE,IAAI,QAAQ,CAAC;EACf,EAAE,IAAI,SAAS,EAAE;EACjB,IAAI,QAAQ,GAAG,EAAE,GAAG,SAAS,CAAC;EAC9B,IAAI,QAAQ,GAAG,EAAE,GAAG,SAAS,CAAC;EAC9B,IAAI,QAAQ,GAAG,EAAE,GAAG,SAAS,CAAC;EAC9B,GAAG,MAAM;EACT,IAAI,QAAQ,GAAG,EAAE,GAAG,SAAS,CAAC;EAC9B,IAAI,QAAQ,GAAG,EAAE,GAAG,SAAS,CAAC;EAC9B,IAAI,QAAQ,GAAG,EAAE,GAAG,SAAS,CAAC;EAC9B,GAAG;AACH;EACA,EAAE,MAAM,SAAS,GAAG,QAAQ,GAAG,QAAQ,GAAG,QAAQ,CAAC;AACnD;EACA,EAAE,IAAI,QAAQ,CAAC;EACf,EAAE,IAAI,QAAQ,CAAC;EACf,EAAE,IAAI,QAAQ,CAAC;EACf,EAAE,IAAI,QAAQ,CAAC;EACf,EAAE,IAAI,QAAQ,CAAC;EACf,EAAE,IAAI,QAAQ,CAAC;AACf;EACA,EAAE,IAAI,SAAS,KAAK,CAAC,EAAE;EACvB,IAAI,IAAI,QAAQ,EAAE;EAClB,MAAM,QAAQ,GAAG,CAAC,SAAS,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,CAAC,CAAC;EAC9C,MAAM,QAAQ,GAAG,CAAC,SAAS,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,CAAC,CAAC;AAC9C;EACA,MAAM,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;AACrB;EACA,MAAM,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;AACrB;EACA,MAAM,IAAI,QAAQ,KAAK,GAAG,EAAE;EAC5B,QAAQ,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC;EACxB,QAAQ,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;EACvB,QAAQ,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;EACvB,QAAQ,MAAM,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;EAC9B,OAAO;AACP;EACA,MAAM,IAAI,QAAQ,KAAK,GAAG,EAAE;EAC5B,QAAQ,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC;EACxB,QAAQ,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;EACvB,QAAQ,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;EACvB,QAAQ,MAAM,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;EAC9B,OAAO;EACP,KAAK,MAAM,IAAI,QAAQ,EAAE;EACzB,MAAM,QAAQ,GAAG,CAAC,SAAS,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,CAAC,CAAC;EAC9C,MAAM,QAAQ,GAAG,CAAC,SAAS,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,CAAC,CAAC;AAC9C;EACA,MAAM,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;AACrB;EACA,MAAM,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;AACrB;EACA,MAAM,IAAI,QAAQ,KAAK,GAAG,EAAE;EAC5B,QAAQ,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC;EACxB,QAAQ,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;EACvB,QAAQ,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;EACvB,QAAQ,MAAM,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;EAC9B,OAAO;AACP;EACA,MAAM,IAAI,QAAQ,KAAK,GAAG,EAAE;EAC5B,QAAQ,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC;EACxB,QAAQ,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;EACvB,QAAQ,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;EACvB,QAAQ,MAAM,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;EAC9B,OAAO;EACP,KAAK,MAAM,IAAI,QAAQ,EAAE;EACzB,MAAM,QAAQ,GAAG,CAAC,SAAS,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,CAAC,CAAC;EAC9C,MAAM,QAAQ,GAAG,CAAC,SAAS,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,CAAC,CAAC;AAC9C;EACA,MAAM,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;AACrB;EACA,MAAM,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;AACrB;EACA,MAAM,IAAI,QAAQ,KAAK,GAAG,EAAE;EAC5B,QAAQ,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC;EACxB,QAAQ,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;EACvB,QAAQ,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;EACvB,QAAQ,MAAM,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;EAC9B,OAAO;AACP;EACA,MAAM,IAAI,QAAQ,KAAK,GAAG,EAAE;EAC5B,QAAQ,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC;EACxB,QAAQ,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;EACvB,QAAQ,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;EACvB,QAAQ,MAAM,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;EAC9B,OAAO;EACP,KAAK;EACL,GAAG,MAAM,IAAI,SAAS,KAAK,CAAC,EAAE;EAC9B,IAAI,IAAI,CAAC,QAAQ,IAAI,EAAE,KAAK,SAAS,EAAE;EACvC,MAAM,QAAQ,GAAG,CAAC,SAAS,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,CAAC,CAAC;EAC9C,MAAM,QAAQ,GAAG,CAAC,SAAS,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,CAAC,CAAC;AAC9C;EACA,MAAM,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;AACrB;EACA,MAAM,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC;EACtB,MAAM,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;EACrB,MAAM,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;EACrB,MAAM,MAAM,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;AAC5B;EACA,MAAM,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC;EACtB,MAAM,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;EACrB,MAAM,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;EACrB,MAAM,MAAM,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;EAC5B,KAAK,MAAM,IAAI,CAAC,QAAQ,IAAI,EAAE,KAAK,SAAS,EAAE;EAC9C,MAAM,QAAQ,GAAG,CAAC,SAAS,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,CAAC,CAAC;EAC9C,MAAM,QAAQ,GAAG,CAAC,SAAS,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,CAAC,CAAC;AAC9C;EACA,MAAM,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;AACrB;EACA,MAAM,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC;EACtB,MAAM,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;EACrB,MAAM,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;EACrB,MAAM,MAAM,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;AAC5B;EACA,MAAM,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC;EACtB,MAAM,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;EACrB,MAAM,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;EACrB,MAAM,MAAM,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;EAC5B,KAAK,MAAM,IAAI,CAAC,QAAQ,IAAI,EAAE,KAAK,SAAS,EAAE;EAC9C,MAAM,QAAQ,GAAG,CAAC,SAAS,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,CAAC,CAAC;EAC9C,MAAM,QAAQ,GAAG,CAAC,SAAS,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,CAAC,CAAC;AAC9C;EACA,MAAM,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;AACrB;EACA,MAAM,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC;EACtB,MAAM,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;EACrB,MAAM,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;EACrB,MAAM,MAAM,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;AAC5B;EACA,MAAM,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC;EACtB,MAAM,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;EACrB,MAAM,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;EACrB,MAAM,MAAM,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;EAC5B,KAAK;EACL,GAAG,MAAM,IAAI,SAAS,KAAK,CAAC,EAAE;EAC9B;EACA,IAAI,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;EACnB,IAAI,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;EACnB,IAAI,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;EACnB,GAAG;EACH;AACA;EACA,EAAE,OAAO,MAAM,CAAC;EAChB,CAAC,CAAC;AACF;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA,eAAe,CAAC,6BAA6B,GAAG;EAChD,EAAE,CAAC;EACH,EAAE,CAAC;EACH,EAAE,EAAE;EACJ,EAAE,EAAE;EACJ,EAAE,EAAE;EACJ,EAAE,EAAE;EACJ,EAAE,EAAE;EACJ,EAAE,EAAE;EACJ,EAAE,MAAM;EACR,EAAE;EACF;EACA,EAAE,IAAI,CAACA,oBAAO,CAAC,CAAC,CAAC,EAAE;EACnB,IAAI,MAAM,IAAIC,oBAAc,CAAC,gBAAgB,CAAC,CAAC;EAC/C,GAAG;EACH,EAAE,IAAI,CAACD,oBAAO,CAAC,CAAC,CAAC,EAAE;EACnB,IAAI,MAAM,IAAIC,oBAAc,CAAC,gBAAgB,CAAC,CAAC;EAC/C,GAAG;EACH,EAAE,IAAI,CAACD,oBAAO,CAAC,EAAE,CAAC,EAAE;EACpB,IAAI,MAAM,IAAIC,oBAAc,CAAC,iBAAiB,CAAC,CAAC;EAChD,GAAG;EACH,EAAE,IAAI,CAACD,oBAAO,CAAC,EAAE,CAAC,EAAE;EACpB,IAAI,MAAM,IAAIC,oBAAc,CAAC,iBAAiB,CAAC,CAAC;EAChD,GAAG;EACH,EAAE,IAAI,CAACD,oBAAO,CAAC,EAAE,CAAC,EAAE;EACpB,IAAI,MAAM,IAAIC,oBAAc,CAAC,iBAAiB,CAAC,CAAC;EAChD,GAAG;EACH,EAAE,IAAI,CAACD,oBAAO,CAAC,EAAE,CAAC,EAAE;EACpB,IAAI,MAAM,IAAIC,oBAAc,CAAC,iBAAiB,CAAC,CAAC;EAChD,GAAG;EACH,EAAE,IAAI,CAACD,oBAAO,CAAC,EAAE,CAAC,EAAE;EACpB,IAAI,MAAM,IAAIC,oBAAc,CAAC,iBAAiB,CAAC,CAAC;EAChD,GAAG;EACH,EAAE,IAAI,CAACD,oBAAO,CAAC,EAAE,CAAC,EAAE;EACpB,IAAI,MAAM,IAAIC,oBAAc,CAAC,iBAAiB,CAAC,CAAC;EAChD,GAAG;EACH;AACA;EACA,EAAE,MAAM,KAAK,GAAG,EAAE,GAAG,EAAE,CAAC;EACxB,EAAE,MAAM,KAAK,GAAG,EAAE,GAAG,EAAE,CAAC;EACxB,EAAE,MAAM,KAAK,GAAG,EAAE,GAAG,EAAE,CAAC;EACxB,EAAE,MAAM,KAAK,GAAG,EAAE,GAAG,EAAE,CAAC;EACxB,EAAE,MAAM,kBAAkB,GAAG,GAAG,IAAI,KAAK,GAAG,KAAK,GAAG,KAAK,GAAG,KAAK,CAAC,CAAC;EACnE,EAAE,MAAM,IAAI,GAAG,CAAC,GAAG,EAAE,CAAC;EACtB,EAAE,MAAM,IAAI,GAAG,CAAC,GAAG,EAAE,CAAC;EACtB,EAAE,MAAM,EAAE,GAAG,CAAC,KAAK,GAAG,IAAI,GAAG,KAAK,GAAG,IAAI,IAAI,kBAAkB,CAAC;EAChE,EAAE,MAAM,EAAE,GAAG,CAAC,CAAC,KAAK,GAAG,IAAI,GAAG,KAAK,GAAG,IAAI,IAAI,kBAAkB,CAAC;EACjE,EAAE,MAAM,EAAE,GAAG,GAAG,GAAG,EAAE,GAAG,EAAE,CAAC;AAC3B;EACA,EAAE,IAAID,oBAAO,CAAC,MAAM,CAAC,EAAE;EACvB,IAAI,MAAM,CAAC,CAAC,GAAG,EAAE,CAAC;EAClB,IAAI,MAAM,CAAC,CAAC,GAAG,EAAE,CAAC;EAClB,IAAI,MAAM,CAAC,CAAC,GAAG,EAAE,CAAC;EAClB,IAAI,OAAO,MAAM,CAAC;EAClB,GAAG;EACH,EAAE,OAAO,IAAIE,kBAAU,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,CAAC;EACpC,CAAC,CAAC;AACF;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA,eAAe,CAAC,yCAAyC,GAAG;EAC5D,EAAE,GAAG;EACL,EAAE,GAAG;EACL,EAAE,GAAG;EACL,EAAE,GAAG;EACL,EAAE,GAAG;EACL,EAAE,GAAG;EACL,EAAE,GAAG;EACL,EAAE,GAAG;EACL,EAAE,MAAM;EACR,EAAE;EACF;EACA,EAAEC,WAAK,CAAC,MAAM,CAAC,MAAM,CAAC,KAAK,EAAE,GAAG,CAAC,CAAC;EAClC,EAAEA,WAAK,CAAC,MAAM,CAAC,MAAM,CAAC,KAAK,EAAE,GAAG,CAAC,CAAC;EAClC,EAAEA,WAAK,CAAC,MAAM,CAAC,MAAM,CAAC,KAAK,EAAE,GAAG,CAAC,CAAC;EAClC,EAAEA,WAAK,CAAC,MAAM,CAAC,MAAM,CAAC,KAAK,EAAE,GAAG,CAAC,CAAC;EAClC,EAAEA,WAAK,CAAC,MAAM,CAAC,MAAM,CAAC,KAAK,EAAE,GAAG,CAAC,CAAC;EAClC,EAAEA,WAAK,CAAC,MAAM,CAAC,MAAM,CAAC,KAAK,EAAE,GAAG,CAAC,CAAC;EAClC,EAAEA,WAAK,CAAC,MAAM,CAAC,MAAM,CAAC,KAAK,EAAE,GAAG,CAAC,CAAC;EAClC,EAAEA,WAAK,CAAC,MAAM,CAAC,MAAM,CAAC,KAAK,EAAE,GAAG,CAAC,CAAC;EAClC;AACA;EACA,EAAE,MAAM,WAAW,GAAG,CAAC,GAAG,GAAG,GAAG,KAAK,GAAG,GAAG,GAAG,CAAC,GAAG,CAAC,GAAG,GAAG,GAAG,KAAK,GAAG,GAAG,GAAG,CAAC,CAAC;EAC5E,EAAE,MAAM,WAAW,GAAG,CAAC,GAAG,GAAG,GAAG,KAAK,GAAG,GAAG,GAAG,CAAC,GAAG,CAAC,GAAG,GAAG,GAAG,KAAK,GAAG,GAAG,GAAG,CAAC,CAAC;EAC5E,EAAE,MAAM,YAAY,GAAG,CAAC,GAAG,GAAG,GAAG,KAAK,GAAG,GAAG,GAAG,CAAC,GAAG,CAAC,GAAG,GAAG,GAAG,KAAK,GAAG,GAAG,GAAG,CAAC,CAAC;AAC7E;EACA;EACA,EAAE,IAAI,YAAY,KAAK,CAAC,EAAE;EAC1B,IAAI,OAAO;EACX,GAAG;AACH;EACA,EAAE,MAAM,GAAG,GAAG,WAAW,GAAG,YAAY,CAAC;EACzC,EAAE,MAAM,GAAG,GAAG,WAAW,GAAG,YAAY,CAAC;AACzC;EACA,EAAE,IAAI,GAAG,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,EAAE;EACpD,IAAI,IAAI,CAACH,oBAAO,CAAC,MAAM,CAAC,EAAE;EAC1B,MAAM,MAAM,GAAG,IAAII,kBAAU,EAAE,CAAC;EAChC,KAAK;AACL;EACA,IAAI,MAAM,CAAC,CAAC,GAAG,GAAG,GAAG,GAAG,IAAI,GAAG,GAAG,GAAG,CAAC,CAAC;EACvC,IAAI,MAAM,CAAC,CAAC,GAAG,GAAG,GAAG,GAAG,IAAI,GAAG,GAAG,GAAG,CAAC,CAAC;AACvC;EACA,IAAI,OAAO,MAAM,CAAC;EAClB,GAAG;EACH,CAAC,CAAC;AACF,0BAAe,eAAe;;ECrV9B,MAAM,QAAQ,GAAG,KAAK,CAAC;EACvB,MAAM,YAAY,GAAG,CAAC,QAAQ,GAAG,CAAC,IAAI,CAAC,CAAC;AACxC;EACA,MAAM,WAAW,GAAG,EAAE,CAAC;EACvB,MAAM,YAAY,GAAG,EAAE,CAAC;EACxB,MAAM,eAAe,GAAG,EAAE,CAAC;EAC3B,MAAM,mBAAmB,GAAG,IAAIC,oBAAY,EAAE,CAAC;EAC/C,IAAI,iBAAiB,GAAG,IAAIH,kBAAU,EAAE,CAAC;EACzC,MAAM,QAAQ,GAAG,EAAE,CAAC;EACpB,MAAM,QAAQ,GAAG,EAAE,CAAC;EACpB,MAAM,aAAa,GAAG,EAAE,CAAC;EACzB,MAAM,cAAc,GAAG,EAAE,CAAC;EAC1B,MAAM,cAAc,GAAG,EAAE,CAAC;EAC1B,MAAM,4BAA4B,GAAG,IAAIA,kBAAU,EAAE,CAAC;EACtD,MAAM,qBAAqB,GAAG,IAAII,yBAAc,EAAE,CAAC;EACnD,MAAM,0BAA0B,GAAG,IAAIC,uCAAmB,EAAE,CAAC;EAC7D,MAAM,sBAAsB,GAAG,IAAIH,kBAAU,EAAE,CAAC;EAChD,MAAM,uBAAuB,GAAG,IAAIF,kBAAU,EAAE,CAAC;AACjD;EACA,SAAS,4BAA4B,CAAC,UAAU,EAAE,mBAAmB,EAAE;EACvE,EAAE,MAAM,WAAW,GAAG,UAAU,CAAC,WAAW,CAAC;EAC7C,EAAE,MAAM,YAAY,GAAG,UAAU,CAAC,YAAY,CAAC;AAC/C;EACA,EAAE,MAAM,IAAI,GAAG,WAAW,GAAG,YAAY,GAAG,CAAC,CAAC;EAC9C,EAAE,MAAM,IAAI,GAAG,WAAW,GAAG,QAAQ,GAAG,YAAY,CAAC;EACrD,EAAE,MAAM,IAAI,GAAG,YAAY,GAAG,YAAY,GAAG,CAAC,CAAC;EAC/C,EAAE,MAAM,IAAI,GAAG,YAAY,GAAG,QAAQ,GAAG,YAAY,CAAC;AACtD;EACA,EAAE,MAAM,OAAO,GAAG,QAAQ,CAAC;EAC3B,EAAE,MAAM,OAAO,GAAG,QAAQ,CAAC;EAC3B,EAAE,MAAM,YAAY,GAAG,aAAa,CAAC;EACrC,EAAE,MAAM,YAAY,GAAG,cAAc,CAAC;AACtC;EACA,EAAE,OAAO,CAAC,MAAM,GAAG,CAAC,CAAC;EACrB,EAAE,OAAO,CAAC,MAAM,GAAG,CAAC,CAAC;EACrB,EAAE,YAAY,CAAC,MAAM,GAAG,CAAC,CAAC;EAC1B,EAAE,YAAY,CAAC,MAAM,GAAG,CAAC,CAAC;AAC1B;EACA,EAAE,MAAM,OAAO,GAAG,cAAc,CAAC;EACjC,EAAE,OAAO,CAAC,MAAM,GAAG,CAAC,CAAC;AACrB;EACA,EAAE,MAAM,SAAS,GAAG,EAAE,CAAC;AACvB;EACA,EAAE,MAAM,cAAc,GAAG,UAAU,CAAC,QAAQ,CAAC;EAC7C,EAAE,IAAI,aAAa,GAAG,UAAU,CAAC,OAAO,CAAC;EACzC,EAAE,aAAa,GAAG,aAAa,CAAC,QAAQ,CAAC,CAAC,EAAE,UAAU,CAAC,uBAAuB,CAAC,CAAC;AAChF;EACA,EAAE,MAAM,QAAQ,GAAGM,+BAAe,CAAC,KAAK,CAAC,UAAU,CAAC,QAAQ,CAAC,CAAC;EAC9D,EAAE,MAAM,gBAAgB,GAAG,QAAQ,CAAC,gBAAgB,CAAC;AACrD;EACA,EAAE,IAAI,WAAW,GAAG,CAAC,CAAC;EACtB,EAAE,MAAM,oBAAoB,GAAG,UAAU,CAAC,wBAAwB,CAAC;AACnE;EACA,EAAE,MAAM,mBAAmB,GAAG,UAAU,CAAC,aAAa,CAAC;EACvD,EAAE,MAAM,mBAAmB,GAAG,UAAU,CAAC,aAAa,CAAC;AACvD;EACA,EAAE,MAAM,aAAa,GAAG,IAAI,KAAK,CAAC,oBAAoB,CAAC,CAAC;EACxD,EAAE,MAAM,aAAa,GAAG,IAAI,KAAK,CAAC,oBAAoB,CAAC,CAAC;EACxD,EAAE,MAAM,kBAAkB,GAAG,IAAI,KAAK,CAAC,oBAAoB,CAAC,CAAC;EAC7D,EAAE,MAAM,kBAAkB,GAAG,gBAAgB;EAC7C,MAAM,IAAI,KAAK,CAAC,oBAAoB,GAAG,CAAC,CAAC;EACzC,MAAM,SAAS,CAAC;AAChB;EACA,EAAE,MAAM,SAAS,GAAG,EAAE,CAAC;EACvB,EAAE,IAAI,MAAM,CAAC;AACb;EACA,EAAE,IAAI,CAAC,EAAE,CAAC,CAAC;EACX,EAAE,IAAI,CAAC,EAAE,CAAC,CAAC;EACX,EAAE,KAAK,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,oBAAoB,EAAE,EAAE,CAAC,EAAE,CAAC,IAAI,CAAC,EAAE;EAC5D,IAAI,MAAM,SAAS,GAAG,QAAQ,CAAC,wBAAwB;EACvD,MAAM,cAAc;EACpB,MAAM,CAAC;EACP,MAAM,sBAAsB;EAC5B,KAAK,CAAC;EACN,IAAI,MAAM,GAAG,QAAQ,CAAC,YAAY,CAAC,cAAc,EAAE,CAAC,CAAC,CAAC;AACtD;EACA,IAAI,CAAC,GAAGC,iBAAU,CAAC,KAAK,CAAC,CAAC,SAAS,CAAC,CAAC,GAAG,QAAQ,IAAI,CAAC,EAAE,CAAC,EAAE,QAAQ,CAAC,CAAC;EACpE,IAAI,CAAC,GAAGA,iBAAU,CAAC,KAAK,CAAC,CAAC,SAAS,CAAC,CAAC,GAAG,QAAQ,IAAI,CAAC,EAAE,CAAC,EAAE,QAAQ,CAAC,CAAC;EACpE,IAAI,kBAAkB,CAAC,CAAC,CAAC,GAAGA,iBAAU,CAAC,KAAK;EAC5C,MAAM,CAAC,CAAC,CAAC,MAAM,GAAG,mBAAmB;EACrC,SAAS,mBAAmB,GAAG,mBAAmB,CAAC;EACnD,QAAQ,QAAQ;EAChB,QAAQ,CAAC;EACT,MAAM,CAAC;EACP,MAAM,QAAQ;EACd,KAAK,CAAC;AACN;EACA,IAAI,IAAI,CAAC,GAAG,SAAS,EAAE;EACvB,MAAM,CAAC,GAAG,CAAC,CAAC;EACZ,KAAK;AACL;EACA,IAAI,IAAI,CAAC,GAAG,SAAS,EAAE;EACvB,MAAM,CAAC,GAAG,CAAC,CAAC;EACZ,KAAK;AACL;EACA,IAAI,IAAI,QAAQ,GAAG,CAAC,GAAG,SAAS,EAAE;EAClC,MAAM,CAAC,GAAG,QAAQ,CAAC;EACnB,KAAK;AACL;EACA,IAAI,IAAI,QAAQ,GAAG,CAAC,GAAG,SAAS,EAAE;EAClC,MAAM,CAAC,GAAG,QAAQ,CAAC;EACnB,KAAK;AACL;EACA,IAAI,aAAa,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;EACzB,IAAI,aAAa,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;AACzB;EACA,IAAI,IAAI,gBAAgB,EAAE;EAC1B,MAAM,MAAM,aAAa,GAAG,QAAQ,CAAC,mBAAmB;EACxD,QAAQ,cAAc;EACtB,QAAQ,CAAC;EACT,QAAQ,uBAAuB;EAC/B,OAAO,CAAC;EACR,MAAM,kBAAkB,CAAC,CAAC,CAAC,GAAG,aAAa,CAAC,CAAC,CAAC;EAC9C,MAAM,kBAAkB,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,aAAa,CAAC,CAAC,CAAC;EAClD,KAAK;AACL;EACA,IAAI;EACJ,MAAM,CAAC,CAAC,WAAW,IAAI,CAAC,IAAI,YAAY;EACxC,SAAS,CAAC,WAAW,IAAI,CAAC,IAAI,YAAY,CAAC;EAC3C,OAAO,CAAC,YAAY,IAAI,CAAC,IAAI,YAAY;EACzC,SAAS,CAAC,YAAY,IAAI,CAAC,IAAI,YAAY,CAAC,CAAC;EAC7C,MAAM;EACN,MAAM,SAAS,CAAC,CAAC,CAAC,GAAG,WAAW,CAAC;EACjC,MAAM,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;EACtB,MAAM,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;EACtB,MAAM,YAAY,CAAC,IAAI,CAAC,kBAAkB,CAAC,CAAC,CAAC,CAAC,CAAC;EAC/C,MAAM,IAAI,gBAAgB,EAAE;EAC5B,QAAQ,YAAY,CAAC,IAAI,CAAC,kBAAkB,CAAC,CAAC,CAAC,CAAC,CAAC;EACjD,QAAQ,YAAY,CAAC,IAAI,CAAC,kBAAkB,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;EACrD,OAAO;AACP;EACA,MAAM,EAAE,WAAW,CAAC;EACpB,KAAK;EACL,GAAG;AACH;EACA,EAAE,MAAM,gBAAgB,GAAG,EAAE,CAAC;EAC9B,EAAE,gBAAgB,CAAC,IAAI,CAAC,IAAI,MAAM,EAAE,CAAC,CAAC;EACtC,EAAE,gBAAgB,CAAC,IAAI,CAAC,IAAI,MAAM,EAAE,CAAC,CAAC;EACtC,EAAE,gBAAgB,CAAC,IAAI,CAAC,IAAI,MAAM,EAAE,CAAC,CAAC;AACtC;EACA,EAAE,MAAM,uBAAuB,GAAG,EAAE,CAAC;EACrC,EAAE,uBAAuB,CAAC,IAAI,CAAC,IAAI,MAAM,EAAE,CAAC,CAAC;EAC7C,EAAE,uBAAuB,CAAC,IAAI,CAAC,IAAI,MAAM,EAAE,CAAC,CAAC;EAC7C,EAAE,uBAAuB,CAAC,IAAI,CAAC,IAAI,MAAM,EAAE,CAAC,CAAC;AAC7C;EACA,EAAE,IAAI,YAAY,CAAC;EACnB,EAAE,IAAI,QAAQ,CAAC;AACf;EACA,EAAE,KAAK,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,aAAa,CAAC,MAAM,EAAE,CAAC,IAAI,CAAC,EAAE;EAChD,IAAI,MAAM,EAAE,GAAG,aAAa,CAAC,CAAC,CAAC,CAAC;EAChC,IAAI,MAAM,EAAE,GAAG,aAAa,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;EACpC,IAAI,MAAM,EAAE,GAAG,aAAa,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;AACpC;EACA,IAAI,MAAM,EAAE,GAAG,aAAa,CAAC,EAAE,CAAC,CAAC;EACjC,IAAI,MAAM,EAAE,GAAG,aAAa,CAAC,EAAE,CAAC,CAAC;EACjC,IAAI,MAAM,EAAE,GAAG,aAAa,CAAC,EAAE,CAAC,CAAC;AACjC;EACA,IAAI,gBAAgB,CAAC,CAAC,CAAC,CAAC,iBAAiB;EACzC,MAAM,aAAa;EACnB,MAAM,aAAa;EACnB,MAAM,kBAAkB;EACxB,MAAM,kBAAkB;EACxB,MAAM,EAAE;EACR,KAAK,CAAC;EACN,IAAI,gBAAgB,CAAC,CAAC,CAAC,CAAC,iBAAiB;EACzC,MAAM,aAAa;EACnB,MAAM,aAAa;EACnB,MAAM,kBAAkB;EACxB,MAAM,kBAAkB;EACxB,MAAM,EAAE;EACR,KAAK,CAAC;EACN,IAAI,gBAAgB,CAAC,CAAC,CAAC,CAAC,iBAAiB;EACzC,MAAM,aAAa;EACnB,MAAM,aAAa;EACnB,MAAM,kBAAkB;EACxB,MAAM,kBAAkB;EACxB,MAAM,EAAE;EACR,KAAK,CAAC;AACN;EACA;EACA,IAAI,MAAM,OAAO,GAAGC,iBAAe,CAAC,kCAAkC;EACtE,MAAM,YAAY;EAClB,MAAM,WAAW;EACjB,MAAM,EAAE;EACR,MAAM,EAAE;EACR,MAAM,EAAE;EACR,MAAM,WAAW;EACjB,KAAK,CAAC;AACN;EACA;EACA,IAAI,YAAY,GAAG,CAAC,CAAC;AACrB;EACA,IAAI,IAAI,YAAY,IAAI,OAAO,CAAC,MAAM,EAAE;EACxC,MAAM,SAAS;EACf,KAAK;EACL,IAAI,YAAY,GAAG,uBAAuB,CAAC,CAAC,CAAC,CAAC,wBAAwB;EACtE,MAAM,OAAO;EACb,MAAM,YAAY;EAClB,MAAM,gBAAgB;EACtB,KAAK,CAAC;AACN;EACA,IAAI,IAAI,YAAY,IAAI,OAAO,CAAC,MAAM,EAAE;EACxC,MAAM,SAAS;EACf,KAAK;EACL,IAAI,YAAY,GAAG,uBAAuB,CAAC,CAAC,CAAC,CAAC,wBAAwB;EACtE,MAAM,OAAO;EACb,MAAM,YAAY;EAClB,MAAM,gBAAgB;EACtB,KAAK,CAAC;AACN;EACA,IAAI,IAAI,YAAY,IAAI,OAAO,CAAC,MAAM,EAAE;EACxC,MAAM,SAAS;EACf,KAAK;EACL,IAAI,YAAY,GAAG,uBAAuB,CAAC,CAAC,CAAC,CAAC,wBAAwB;EACtE,MAAM,OAAO;EACb,MAAM,YAAY;EAClB,MAAM,gBAAgB;EACtB,KAAK,CAAC;AACN;EACA;EACA,IAAI,QAAQ,GAAGA,iBAAe,CAAC,kCAAkC;EACjE,MAAM,YAAY;EAClB,MAAM,YAAY;EAClB,MAAM,uBAAuB,CAAC,CAAC,CAAC,CAAC,IAAI,EAAE;EACvC,MAAM,uBAAuB,CAAC,CAAC,CAAC,CAAC,IAAI,EAAE;EACvC,MAAM,uBAAuB,CAAC,CAAC,CAAC,CAAC,IAAI,EAAE;EACvC,MAAM,YAAY;EAClB,KAAK,CAAC;EACN,IAAI,iBAAiB;EACrB,MAAM,OAAO;EACb,MAAM,OAAO;EACb,MAAM,YAAY;EAClB,MAAM,YAAY;EAClB,MAAM,OAAO;EACb,MAAM,SAAS;EACf,MAAM,QAAQ;EACd,MAAM,uBAAuB;EAC7B,MAAM,gBAAgB;EACtB,KAAK,CAAC;AACN;EACA;EACA;EACA,IAAI,IAAI,YAAY,GAAG,OAAO,CAAC,MAAM,EAAE;EACvC,MAAM,uBAAuB,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,uBAAuB,CAAC,CAAC,CAAC,CAAC,CAAC;EACnE,MAAM,uBAAuB,CAAC,CAAC,CAAC,CAAC,wBAAwB;EACzD,QAAQ,OAAO;EACf,QAAQ,YAAY;EACpB,QAAQ,gBAAgB;EACxB,OAAO,CAAC;AACR;EACA,MAAM,QAAQ,GAAGA,iBAAe,CAAC,kCAAkC;EACnE,QAAQ,YAAY;EACpB,QAAQ,YAAY;EACpB,QAAQ,uBAAuB,CAAC,CAAC,CAAC,CAAC,IAAI,EAAE;EACzC,QAAQ,uBAAuB,CAAC,CAAC,CAAC,CAAC,IAAI,EAAE;EACzC,QAAQ,uBAAuB,CAAC,CAAC,CAAC,CAAC,IAAI,EAAE;EACzC,QAAQ,YAAY;EACpB,OAAO,CAAC;EACR,MAAM,iBAAiB;EACvB,QAAQ,OAAO;EACf,QAAQ,OAAO;EACf,QAAQ,YAAY;EACpB,QAAQ,YAAY;EACpB,QAAQ,OAAO;EACf,QAAQ,SAAS;EACjB,QAAQ,QAAQ;EAChB,QAAQ,uBAAuB;EAC/B,QAAQ,gBAAgB;EACxB,OAAO,CAAC;EACR,KAAK;EACL,GAAG;AACH;EACA,EAAE,MAAM,OAAO,GAAG,WAAW,GAAG,CAAC,QAAQ,GAAG,CAAC,CAAC;EAC9C,EAAE,MAAM,OAAO,GAAG,YAAY,GAAG,CAAC,QAAQ,GAAG,CAAC,CAAC;AAC/C;EACA,EAAE,MAAM,WAAW,GAAG,EAAE,CAAC;EACzB,EAAE,MAAM,YAAY,GAAG,EAAE,CAAC;EAC1B,EAAE,MAAM,WAAW,GAAG,EAAE,CAAC;EACzB,EAAE,MAAM,YAAY,GAAG,EAAE,CAAC;AAC1B;EACA,EAAE,IAAI,aAAa,GAAG,MAAM,CAAC,SAAS,CAAC;EACvC,EAAE,IAAI,aAAa,GAAG,CAAC,aAAa,CAAC;AACrC;EACA,EAAE,MAAM,iBAAiB,GAAG,eAAe,CAAC;EAC5C,EAAE,iBAAiB,CAAC,MAAM,GAAG,CAAC,CAAC;AAC/B;EACA,EAAE,MAAM,SAAS,GAAGC,iBAAS,CAAC,KAAK,CAAC,UAAU,CAAC,SAAS,CAAC,CAAC;EAC1D,EAAE,MAAM,SAAS,GAAGC,iBAAS,CAAC,KAAK,CAAC,UAAU,CAAC,cAAc,CAAC,CAAC;AAC/D;EACA,EAAE,MAAM,KAAK,GAAG,SAAS,CAAC,KAAK,CAAC;EAChC,EAAE,MAAM,KAAK,GAAG,SAAS,CAAC,KAAK,CAAC;EAChC,EAAE,IAAI,IAAI,GAAG,SAAS,CAAC,IAAI,CAAC;EAC5B,EAAE,MAAM,IAAI,GAAG,SAAS,CAAC,IAAI,CAAC;AAC9B;EACA,EAAE,IAAI,IAAI,GAAG,IAAI,EAAE;EACnB,IAAI,IAAI,IAAIH,iBAAU,CAAC,MAAM,CAAC;EAC9B,GAAG;AACH;EACA,EAAE,KAAK,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,OAAO,CAAC,MAAM,EAAE,EAAE,CAAC,EAAE;EACvC,IAAI,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC;EAC/B,IAAI,IAAI,CAAC,IAAI,IAAI,EAAE;EACnB,MAAM,WAAW,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;EAC1B,MAAM,CAAC,GAAG,CAAC,CAAC;EACZ,KAAK,MAAM,IAAI,CAAC,IAAI,IAAI,EAAE;EAC1B,MAAM,WAAW,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;EAC1B,MAAM,CAAC,GAAG,QAAQ,CAAC;EACnB,KAAK,MAAM;EACX,MAAM,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,OAAO,CAAC;EAC1B,KAAK;AACL;EACA,IAAI,OAAO,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;AACnB;EACA,IAAI,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC;EAC/B,IAAI,IAAI,CAAC,IAAI,IAAI,EAAE;EACnB,MAAM,YAAY,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;EAC3B,MAAM,CAAC,GAAG,CAAC,CAAC;EACZ,KAAK,MAAM,IAAI,CAAC,IAAI,IAAI,EAAE;EAC1B,MAAM,YAAY,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;EAC3B,MAAM,CAAC,GAAG,QAAQ,CAAC;EACnB,KAAK,MAAM;EACX,MAAM,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,OAAO,CAAC;EAC1B,KAAK;AACL;EACA,IAAI,OAAO,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;AACnB;EACA,IAAI,MAAM,GAAGA,iBAAU,CAAC,IAAI;EAC5B,MAAM,mBAAmB;EACzB,MAAM,mBAAmB;EACzB,MAAM,YAAY,CAAC,CAAC,CAAC,GAAG,QAAQ;EAChC,KAAK,CAAC;EACN,IAAI,IAAI,MAAM,GAAG,aAAa,EAAE;EAChC,MAAM,aAAa,GAAG,MAAM,CAAC;EAC7B,KAAK;EACL,IAAI,IAAI,MAAM,GAAG,aAAa,EAAE;EAChC,MAAM,aAAa,GAAG,MAAM,CAAC;EAC7B,KAAK;AACL;EACA,IAAI,YAAY,CAAC,CAAC,CAAC,GAAG,MAAM,CAAC;AAC7B;EACA,IAAI,mBAAmB,CAAC,SAAS,GAAGA,iBAAU,CAAC,IAAI,CAAC,IAAI,EAAE,IAAI,EAAE,CAAC,GAAG,QAAQ,CAAC,CAAC;EAC9E,IAAI,mBAAmB,CAAC,QAAQ,GAAGA,iBAAU,CAAC,IAAI,CAAC,KAAK,EAAE,KAAK,EAAE,CAAC,GAAG,QAAQ,CAAC,CAAC;EAC/E,IAAI,mBAAmB,CAAC,MAAM,GAAG,MAAM,CAAC;AACxC;EACA,IAAI,SAAS,CAAC,uBAAuB,CAAC,mBAAmB,EAAE,iBAAiB,CAAC,CAAC;AAC9E;EACA,IAAI,iBAAiB,CAAC,IAAI,CAAC,iBAAiB,CAAC,CAAC,CAAC,CAAC;EAChD,IAAI,iBAAiB,CAAC,IAAI,CAAC,iBAAiB,CAAC,CAAC,CAAC,CAAC;EAChD,IAAI,iBAAiB,CAAC,IAAI,CAAC,iBAAiB,CAAC,CAAC,CAAC,CAAC;EAChD,GAAG;AACH;EACA,EAAE,MAAM,cAAc,GAAGH,yBAAc,CAAC,YAAY;EACpD,IAAI,iBAAiB;EACrB,IAAIJ,kBAAU,CAAC,IAAI;EACnB,IAAI,CAAC;EACL,IAAI,qBAAqB;EACzB,GAAG,CAAC;EACJ,EAAE,MAAM,mBAAmB,GAAGK,uCAAmB,CAAC,aAAa;EAC/D,IAAI,SAAS;EACb,IAAI,aAAa;EACjB,IAAI,aAAa;EACjB,IAAI,SAAS;EACb,IAAI,0BAA0B;EAC9B,GAAG,CAAC;AACJ;EACA,EAAE,MAAM,QAAQ,GAAG,IAAIM,mCAAmB,CAAC,SAAS,CAAC,CAAC;EACtD,EAAE,MAAM,qBAAqB,GAAG,QAAQ,CAAC,4DAA4D;EACrG,IAAI,cAAc,CAAC,MAAM;EACzB,IAAI,iBAAiB;EACrB,IAAI,CAAC;EACL,IAAI,cAAc,CAAC,MAAM;EACzB,IAAI,aAAa;EACjB,IAAI,4BAA4B;EAChC,GAAG,CAAC;AACJ;EACA,EAAE,MAAM,WAAW,GAAG,aAAa,GAAG,aAAa,CAAC;AACpD;EACA,EAAE,MAAM,QAAQ,GAAG,IAAI,WAAW;EAClC,IAAI,OAAO,CAAC,MAAM,GAAG,OAAO,CAAC,MAAM,GAAG,YAAY,CAAC,MAAM;EACzD,GAAG,CAAC;AACJ;EACA,EAAE,KAAK,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,OAAO,CAAC,MAAM,EAAE,EAAE,CAAC,EAAE;EACvC,IAAI,QAAQ,CAAC,CAAC,CAAC,GAAG,OAAO,CAAC,CAAC,CAAC,CAAC;EAC7B,GAAG;AACH;EACA,EAAE,IAAI,KAAK,GAAG,OAAO,CAAC,MAAM,CAAC;AAC7B;EACA,EAAE,KAAK,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,OAAO,CAAC,MAAM,EAAE,EAAE,CAAC,EAAE;EACvC,IAAI,QAAQ,CAAC,KAAK,GAAG,CAAC,CAAC,GAAG,OAAO,CAAC,CAAC,CAAC,CAAC;EACrC,GAAG;AACH;EACA,EAAE,KAAK,IAAI,OAAO,CAAC,MAAM,CAAC;AAC1B;EACA,EAAE,KAAK,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,YAAY,CAAC,MAAM,EAAE,EAAE,CAAC,EAAE;EAC5C,IAAI,QAAQ,CAAC,KAAK,GAAG,CAAC,CAAC;EACvB,MAAM,CAAC,QAAQ,IAAI,YAAY,CAAC,CAAC,CAAC,GAAG,aAAa,CAAC,IAAI,WAAW,CAAC;EACnE,GAAG;AACH;EACA,EAAE,MAAM,iBAAiB,GAAGC,2BAAa,CAAC,gBAAgB;EAC1D,IAAI,OAAO,CAAC,MAAM;EAClB,IAAI,OAAO;EACX,GAAG,CAAC;AACJ;EACA,EAAE,IAAI,cAAc,CAAC;EACrB,EAAE,IAAI,gBAAgB,EAAE;EACxB,IAAI,MAAM,WAAW,GAAG,IAAI,UAAU,CAAC,YAAY,CAAC,CAAC;EACrD,IAAI,mBAAmB,CAAC,IAAI;EAC5B,MAAM,QAAQ,CAAC,MAAM;EACrB,MAAM,iBAAiB,CAAC,MAAM;EAC9B,MAAM,WAAW,CAAC,MAAM;EACxB,KAAK,CAAC;EACN,IAAI,cAAc,GAAG,WAAW,CAAC,MAAM,CAAC;EACxC,GAAG,MAAM;EACT,IAAI,mBAAmB,CAAC,IAAI,CAAC,QAAQ,CAAC,MAAM,EAAE,iBAAiB,CAAC,MAAM,CAAC,CAAC;EACxE,GAAG;AACH;EACA,EAAE,OAAO;EACT,IAAI,QAAQ,EAAE,QAAQ,CAAC,MAAM;EAC7B,IAAI,cAAc,EAAE,cAAc;EAClC,IAAI,OAAO,EAAE,iBAAiB,CAAC,MAAM;EACrC,IAAI,aAAa,EAAE,aAAa;EAChC,IAAI,aAAa,EAAE,aAAa;EAChC,IAAI,WAAW,EAAE,WAAW;EAC5B,IAAI,YAAY,EAAE,YAAY;EAC9B,IAAI,WAAW,EAAE,WAAW;EAC5B,IAAI,YAAY,EAAE,YAAY;EAC9B,IAAI,cAAc,EAAE,cAAc;EAClC,IAAI,mBAAmB,EAAE,mBAAmB;EAC5C,IAAI,qBAAqB,EAAE,qBAAqB;EAChD,GAAG,CAAC;EACJ,CAAC;AACD;EACA,SAAS,MAAM,GAAG;EAClB,EAAE,IAAI,CAAC,YAAY,GAAG,SAAS,CAAC;EAChC,EAAE,IAAI,CAAC,KAAK,GAAG,SAAS,CAAC;EACzB,EAAE,IAAI,CAAC,KAAK,GAAG,SAAS,CAAC;EACzB,EAAE,IAAI,CAAC,MAAM,GAAG,SAAS,CAAC;EAC1B,EAAE,IAAI,CAAC,KAAK,GAAG,SAAS,CAAC;EACzB,CAAC;AACD;EACA,MAAM,CAAC,SAAS,CAAC,KAAK,GAAG,UAAU,MAAM,EAAE;EAC3C,EAAE,IAAI,CAACd,oBAAO,CAAC,MAAM,CAAC,EAAE;EACxB,IAAI,MAAM,GAAG,IAAI,MAAM,EAAE,CAAC;EAC1B,GAAG;AACH;EACA,EAAE,MAAM,CAAC,OAAO,GAAG,IAAI,CAAC,OAAO,CAAC;EAChC,EAAE,MAAM,CAAC,OAAO,GAAG,IAAI,CAAC,OAAO,CAAC;EAChC,EAAE,MAAM,CAAC,YAAY,GAAG,IAAI,CAAC,YAAY,CAAC;EAC1C,EAAE,MAAM,CAAC,YAAY,GAAG,IAAI,CAAC,YAAY,CAAC;EAC1C,EAAE,MAAM,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC;EAC5B,EAAE,MAAM,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC;EAC5B,EAAE,MAAM,CAAC,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC;EAC9B,EAAE,MAAM,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC;AAC5B;EACA,EAAE,OAAO,MAAM,CAAC;EAChB,CAAC,CAAC;AACF;EACA,MAAM,CAAC,SAAS,CAAC,iBAAiB,GAAG;EACrC,EAAE,OAAO;EACT,EAAE,OAAO;EACT,EAAE,YAAY;EACd,EAAE,YAAY;EACd,EAAE,KAAK;EACP,EAAE;EACF,EAAE,IAAI,CAAC,OAAO,GAAG,OAAO,CAAC;EACzB,EAAE,IAAI,CAAC,OAAO,GAAG,OAAO,CAAC;EACzB,EAAE,IAAI,CAAC,YAAY,GAAG,YAAY,CAAC;EACnC,EAAE,IAAI,CAAC,YAAY,GAAG,YAAY,CAAC;EACnC,EAAE,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;EACrB,EAAE,IAAI,CAAC,KAAK,GAAG,SAAS,CAAC;EACzB,EAAE,IAAI,CAAC,MAAM,GAAG,SAAS,CAAC;EAC1B,EAAE,IAAI,CAAC,KAAK,GAAG,SAAS,CAAC;EACzB,CAAC,CAAC;AACF;EACA,MAAM,CAAC,SAAS,CAAC,wBAAwB,GAAG;EAC5C,EAAE,UAAU;EACZ,EAAE,KAAK;EACP,EAAE,QAAQ;EACV,EAAE;EACF,EAAE,IAAI,SAAS,GAAG,KAAK,GAAG,CAAC,CAAC;AAC5B;EACA,EAAE,IAAI,UAAU,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,EAAE;EAChC,IAAI,QAAQ,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC;EAC5C,GAAG,MAAM;EACT,IAAI,IAAI,CAAC,YAAY,GAAG,SAAS,CAAC;EAClC,IAAI,IAAI,CAAC,KAAK,GAAG,SAAS,CAAC;EAC3B,IAAI,IAAI,CAAC,KAAK,GAAG,QAAQ,CAAC,UAAU,CAAC,SAAS,CAAC,CAAC,CAAC;EACjD,IAAI,EAAE,SAAS,CAAC;EAChB,IAAI,IAAI,CAAC,MAAM,GAAG,QAAQ,CAAC,UAAU,CAAC,SAAS,CAAC,CAAC,CAAC;EAClD,IAAI,EAAE,SAAS,CAAC;EAChB,IAAI,IAAI,CAAC,KAAK,GAAG,UAAU,CAAC,SAAS,CAAC,CAAC;EACvC,IAAI,EAAE,SAAS,CAAC;EAChB,GAAG;AACH;EACA,EAAE,OAAO,SAAS,CAAC;EACnB,CAAC,CAAC;AACF;EACA,MAAM,CAAC,SAAS,CAAC,MAAM,GAAG,YAAY;EACtC,EAAE,IAAI,IAAI,CAAC,SAAS,EAAE,EAAE;EACxB,IAAI,OAAO,IAAI,CAAC,KAAK,CAAC;EACtB,GAAG;EACH,EAAE,OAAO,IAAI,CAAC,SAAS,CAAC;EACxB,IAAI,KAAK,EAAE,IAAI,CAAC,KAAK,CAAC,MAAM,EAAE;EAC9B,IAAI,MAAM,EAAE,IAAI,CAAC,MAAM,CAAC,MAAM,EAAE;EAChC,IAAI,KAAK,EAAE,IAAI,CAAC,KAAK;EACrB,GAAG,CAAC,CAAC;EACL,CAAC,CAAC;AACF;EACA,MAAM,CAAC,SAAS,CAAC,SAAS,GAAG,YAAY;EACzC,EAAE,OAAOA,oBAAO,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;EAC7B,CAAC,CAAC;AACF;EACA,MAAM,CAAC,SAAS,CAAC,IAAI,GAAG,YAAY;EACpC,EAAE,IAAIA,oBAAO,CAAC,IAAI,CAAC,KAAK,CAAC,EAAE;EAC3B,IAAI,OAAO,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;EACzC,GAAG;EACH,EAAE,OAAOS,iBAAU,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,EAAE,EAAE,IAAI,CAAC,MAAM,CAAC,IAAI,EAAE,EAAE,IAAI,CAAC,KAAK,CAAC,CAAC;EAC5E,CAAC,CAAC;AACF;EACA,MAAM,CAAC,SAAS,CAAC,IAAI,GAAG,YAAY;EACpC,EAAE,IAAIT,oBAAO,CAAC,IAAI,CAAC,KAAK,CAAC,EAAE;EAC3B,IAAI,OAAO,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;EACpC,GAAG;EACH,EAAE,OAAOS,iBAAU,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,EAAE,EAAE,IAAI,CAAC,MAAM,CAAC,IAAI,EAAE,EAAE,IAAI,CAAC,KAAK,CAAC,CAAC;EAC5E,CAAC,CAAC;AACF;EACA,MAAM,CAAC,SAAS,CAAC,IAAI,GAAG,YAAY;EACpC,EAAE,IAAIT,oBAAO,CAAC,IAAI,CAAC,KAAK,CAAC,EAAE;EAC3B,IAAI,OAAO,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;EACpC,GAAG;EACH,EAAE,OAAOS,iBAAU,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,EAAE,EAAE,IAAI,CAAC,MAAM,CAAC,IAAI,EAAE,EAAE,IAAI,CAAC,KAAK,CAAC,CAAC;EAC5E,CAAC,CAAC;AACF;EACA,IAAI,cAAc,GAAG,IAAIL,kBAAU,EAAE,CAAC;EACtC;EACA;EACA,IAAI,KAAK,GAAG,CAAC,CAAC,CAAC;EACf,MAAM,iBAAiB,GAAG,CAAC,IAAIF,kBAAU,EAAE,EAAE,IAAIA,kBAAU,EAAE,CAAC,CAAC;EAC/D,MAAM,iBAAiB,GAAG,CAAC,IAAIA,kBAAU,EAAE,EAAE,IAAIA,kBAAU,EAAE,CAAC,CAAC;EAC/D,SAAS,oBAAoB,CAAC,MAAM,EAAE,MAAM,EAAE;EAC9C,EAAE,EAAE,KAAK,CAAC;AACV;EACA,EAAE,IAAI,KAAK,GAAG,iBAAiB,CAAC,KAAK,CAAC,CAAC;EACvC,EAAE,IAAI,MAAM,GAAG,iBAAiB,CAAC,KAAK,CAAC,CAAC;AACxC;EACA,EAAE,KAAK,GAAGa,yCAAoB,CAAC,SAAS;EACxC,IAAI,MAAM,CAAC,KAAK,CAAC,UAAU,EAAE;EAC7B,IAAI,MAAM,CAAC,KAAK,CAAC,UAAU,EAAE;EAC7B,IAAI,KAAK;EACT,GAAG,CAAC;EACJ,EAAE,MAAM,GAAGA,yCAAoB,CAAC,SAAS;EACzC,IAAI,MAAM,CAAC,MAAM,CAAC,UAAU,EAAE;EAC9B,IAAI,MAAM,CAAC,MAAM,CAAC,UAAU,EAAE;EAC9B,IAAI,MAAM;EACV,GAAG,CAAC;EACJ,EAAE,iBAAiB,GAAGb,kBAAU,CAAC,IAAI;EACrC,IAAI,KAAK;EACT,IAAI,MAAM;EACV,IAAI,MAAM,CAAC,KAAK;EAChB,IAAI,iBAAiB;EACrB,GAAG,CAAC;EACJ,EAAEA,kBAAU,CAAC,SAAS,CAAC,iBAAiB,EAAE,iBAAiB,CAAC,CAAC;AAC7D;EACA,EAAEa,yCAAoB,CAAC,SAAS,CAAC,iBAAiB,EAAE,MAAM,CAAC,CAAC;AAC5D;EACA,EAAE,EAAE,KAAK,CAAC;AACV;EACA,EAAE,OAAO,MAAM,CAAC;EAChB,CAAC;AACD;EACA,MAAM,CAAC,SAAS,CAAC,UAAU,GAAG,YAAY;EAC1C,EAAE,IAAIf,oBAAO,CAAC,IAAI,CAAC,KAAK,CAAC,EAAE;EAC3B,IAAI,OAAO,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,KAAK,GAAG,CAAC,CAAC,CAAC;EAC7C,GAAG;AACH;EACA,EAAE,cAAc,GAAG,oBAAoB,CAAC,IAAI,EAAE,cAAc,CAAC,CAAC;EAC9D,EAAE,OAAO,cAAc,CAAC,CAAC,CAAC;EAC1B,CAAC,CAAC;AACF;EACA,MAAM,CAAC,SAAS,CAAC,UAAU,GAAG,YAAY;EAC1C,EAAE,IAAIA,oBAAO,CAAC,IAAI,CAAC,KAAK,CAAC,EAAE;EAC3B,IAAI,OAAO,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,KAAK,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC;EACjD,GAAG;AACH;EACA,EAAE,cAAc,GAAG,oBAAoB,CAAC,IAAI,EAAE,cAAc,CAAC,CAAC;EAC9D,EAAE,OAAO,cAAc,CAAC,CAAC,CAAC;EAC1B,CAAC,CAAC;AACF;EACA,MAAM,eAAe,GAAG,EAAE,CAAC;EAC3B,eAAe,CAAC,IAAI,CAAC,IAAI,MAAM,EAAE,CAAC,CAAC;EACnC,eAAe,CAAC,IAAI,CAAC,IAAI,MAAM,EAAE,CAAC,CAAC;EACnC,eAAe,CAAC,IAAI,CAAC,IAAI,MAAM,EAAE,CAAC,CAAC;EACnC,eAAe,CAAC,IAAI,CAAC,IAAI,MAAM,EAAE,CAAC,CAAC;AACnC;EACA,SAAS,iBAAiB;EAC1B,EAAE,OAAO;EACT,EAAE,OAAO;EACT,EAAE,YAAY;EACd,EAAE,YAAY;EACd,EAAE,OAAO;EACT,EAAE,SAAS;EACX,EAAE,OAAO;EACT,EAAE,gBAAgB;EAClB,EAAE,gBAAgB;EAClB,EAAE;EACF,EAAE,IAAI,OAAO,CAAC,MAAM,KAAK,CAAC,EAAE;EAC5B,IAAI,OAAO;EACX,GAAG;AACH;EACA,EAAE,IAAI,WAAW,GAAG,CAAC,CAAC;EACtB,EAAE,IAAI,YAAY,GAAG,CAAC,CAAC;EACvB,EAAE,OAAO,YAAY,GAAG,OAAO,CAAC,MAAM,EAAE;EACxC,IAAI,YAAY,GAAG,eAAe,CAAC,WAAW,EAAE,CAAC,CAAC,wBAAwB;EAC1E,MAAM,OAAO;EACb,MAAM,YAAY;EAClB,MAAM,gBAAgB;EACtB,KAAK,CAAC;EACN,GAAG;AACH;EACA,EAAE,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,WAAW,EAAE,EAAE,CAAC,EAAE;EACxC,IAAI,MAAM,aAAa,GAAG,eAAe,CAAC,CAAC,CAAC,CAAC;EAC7C,IAAI,IAAI,CAAC,aAAa,CAAC,SAAS,EAAE,EAAE;EACpC,MAAM,MAAM,GAAG,GAAG,aAAa,CAAC,MAAM,EAAE,CAAC;EACzC,MAAM,IAAIA,oBAAO,CAAC,SAAS,CAAC,GAAG,CAAC,CAAC,EAAE;EACnC,QAAQ,aAAa,CAAC,QAAQ,GAAG,SAAS,CAAC,GAAG,CAAC,CAAC;EAChD,OAAO,MAAM;EACb,QAAQ,MAAM,QAAQ,GAAG,OAAO,CAAC,MAAM,CAAC;EACxC,QAAQ,OAAO,CAAC,IAAI,CAAC,aAAa,CAAC,IAAI,EAAE,CAAC,CAAC;EAC3C,QAAQ,OAAO,CAAC,IAAI,CAAC,aAAa,CAAC,IAAI,EAAE,CAAC,CAAC;EAC3C,QAAQ,YAAY,CAAC,IAAI,CAAC,aAAa,CAAC,IAAI,EAAE,CAAC,CAAC;EAChD,QAAQ,IAAI,gBAAgB,EAAE;EAC9B,UAAU,YAAY,CAAC,IAAI,CAAC,aAAa,CAAC,UAAU,EAAE,CAAC,CAAC;EACxD,UAAU,YAAY,CAAC,IAAI,CAAC,aAAa,CAAC,UAAU,EAAE,CAAC,CAAC;EACxD,SAAS;EACT,QAAQ,aAAa,CAAC,QAAQ,GAAG,QAAQ,CAAC;EAC1C,QAAQ,SAAS,CAAC,GAAG,CAAC,GAAG,QAAQ,CAAC;EAClC,OAAO;EACP,KAAK,MAAM;EACX,MAAM,aAAa,CAAC,QAAQ,GAAG,SAAS,CAAC,aAAa,CAAC,KAAK,CAAC,CAAC;EAC9D,MAAM,aAAa,CAAC,OAAO,GAAG,OAAO,CAAC;EACtC,MAAM,aAAa,CAAC,OAAO,GAAG,OAAO,CAAC;EACtC,MAAM,aAAa,CAAC,YAAY,GAAG,YAAY,CAAC;EAChD,MAAM,IAAI,gBAAgB,EAAE;EAC5B,QAAQ,aAAa,CAAC,YAAY,GAAG,YAAY,CAAC;EAClD,OAAO;EACP,KAAK;EACL,GAAG;AACH;EACA,EAAE,IAAI,WAAW,KAAK,CAAC,EAAE;EACzB;EACA,IAAI,OAAO,CAAC,IAAI,CAAC,eAAe,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC;EAC9C,IAAI,OAAO,CAAC,IAAI,CAAC,eAAe,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC;EAC9C,IAAI,OAAO,CAAC,IAAI,CAAC,eAAe,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC;EAC9C,GAAG,MAAM,IAAI,WAAW,KAAK,CAAC,EAAE;EAChC;EACA,IAAI,OAAO,CAAC,IAAI,CAAC,eAAe,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC;EAC9C,IAAI,OAAO,CAAC,IAAI,CAAC,eAAe,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC;EAC9C,IAAI,OAAO,CAAC,IAAI,CAAC,eAAe,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC;AAC9C;EACA,IAAI,OAAO,CAAC,IAAI,CAAC,eAAe,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC;EAC9C,IAAI,OAAO,CAAC,IAAI,CAAC,eAAe,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC;EAC9C,IAAI,OAAO,CAAC,IAAI,CAAC,eAAe,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC;EAC9C,GAAG;EACH,CAAC;AACD,uCAAe,yBAAyB,CAAC,4BAA4B,CAAC;;;;;;;;"}