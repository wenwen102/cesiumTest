{"version":3,"file":"RectangleGeometryLibrary-5ab8b638.js","sources":["../../../packages/engine/Source/Core/RectangleGeometryLibrary.js"],"sourcesContent":["import Cartesian3 from \"./Cartesian3.js\";\r\nimport Cartographic from \"./Cartographic.js\";\r\nimport defined from \"./defined.js\";\r\nimport DeveloperError from \"./DeveloperError.js\";\r\nimport GeographicProjection from \"./GeographicProjection.js\";\r\nimport CesiumMath from \"./Math.js\";\r\nimport Matrix2 from \"./Matrix2.js\";\r\nimport Rectangle from \"./Rectangle.js\";\r\n\r\nconst cos = Math.cos;\r\nconst sin = Math.sin;\r\nconst sqrt = Math.sqrt;\r\n\r\n/**\r\n * @private\r\n */\r\nconst RectangleGeometryLibrary = {};\r\n\r\n/**\r\n * @private\r\n */\r\nRectangleGeometryLibrary.computePosition = function (\r\n  computedOptions,\r\n  ellipsoid,\r\n  computeST,\r\n  row,\r\n  col,\r\n  position,\r\n  st\r\n) {\r\n  const radiiSquared = ellipsoid.radiiSquared;\r\n  const nwCorner = computedOptions.nwCorner;\r\n  const rectangle = computedOptions.boundingRectangle;\r\n\r\n  let stLatitude =\r\n    nwCorner.latitude -\r\n    computedOptions.granYCos * row +\r\n    col * computedOptions.granXSin;\r\n  const cosLatitude = cos(stLatitude);\r\n  const nZ = sin(stLatitude);\r\n  const kZ = radiiSquared.z * nZ;\r\n\r\n  let stLongitude =\r\n    nwCorner.longitude +\r\n    row * computedOptions.granYSin +\r\n    col * computedOptions.granXCos;\r\n  const nX = cosLatitude * cos(stLongitude);\r\n  const nY = cosLatitude * sin(stLongitude);\r\n\r\n  const kX = radiiSquared.x * nX;\r\n  const kY = radiiSquared.y * nY;\r\n\r\n  const gamma = sqrt(kX * nX + kY * nY + kZ * nZ);\r\n\r\n  position.x = kX / gamma;\r\n  position.y = kY / gamma;\r\n  position.z = kZ / gamma;\r\n\r\n  if (computeST) {\r\n    const stNwCorner = computedOptions.stNwCorner;\r\n    if (defined(stNwCorner)) {\r\n      stLatitude =\r\n        stNwCorner.latitude -\r\n        computedOptions.stGranYCos * row +\r\n        col * computedOptions.stGranXSin;\r\n      stLongitude =\r\n        stNwCorner.longitude +\r\n        row * computedOptions.stGranYSin +\r\n        col * computedOptions.stGranXCos;\r\n\r\n      st.x = (stLongitude - computedOptions.stWest) * computedOptions.lonScalar;\r\n      st.y = (stLatitude - computedOptions.stSouth) * computedOptions.latScalar;\r\n    } else {\r\n      st.x = (stLongitude - rectangle.west) * computedOptions.lonScalar;\r\n      st.y = (stLatitude - rectangle.south) * computedOptions.latScalar;\r\n    }\r\n  }\r\n};\r\n\r\nconst rotationMatrixScratch = new Matrix2();\r\nlet nwCartesian = new Cartesian3();\r\nconst centerScratch = new Cartographic();\r\nlet centerCartesian = new Cartesian3();\r\nconst proj = new GeographicProjection();\r\n\r\nfunction getRotationOptions(\r\n  nwCorner,\r\n  rotation,\r\n  granularityX,\r\n  granularityY,\r\n  center,\r\n  width,\r\n  height\r\n) {\r\n  const cosRotation = Math.cos(rotation);\r\n  const granYCos = granularityY * cosRotation;\r\n  const granXCos = granularityX * cosRotation;\r\n\r\n  const sinRotation = Math.sin(rotation);\r\n  const granYSin = granularityY * sinRotation;\r\n  const granXSin = granularityX * sinRotation;\r\n\r\n  nwCartesian = proj.project(nwCorner, nwCartesian);\r\n\r\n  nwCartesian = Cartesian3.subtract(nwCartesian, centerCartesian, nwCartesian);\r\n  const rotationMatrix = Matrix2.fromRotation(rotation, rotationMatrixScratch);\r\n  nwCartesian = Matrix2.multiplyByVector(\r\n    rotationMatrix,\r\n    nwCartesian,\r\n    nwCartesian\r\n  );\r\n  nwCartesian = Cartesian3.add(nwCartesian, centerCartesian, nwCartesian);\r\n  nwCorner = proj.unproject(nwCartesian, nwCorner);\r\n\r\n  width -= 1;\r\n  height -= 1;\r\n\r\n  const latitude = nwCorner.latitude;\r\n  const latitude0 = latitude + width * granXSin;\r\n  const latitude1 = latitude - granYCos * height;\r\n  const latitude2 = latitude - granYCos * height + width * granXSin;\r\n\r\n  const north = Math.max(latitude, latitude0, latitude1, latitude2);\r\n  const south = Math.min(latitude, latitude0, latitude1, latitude2);\r\n\r\n  const longitude = nwCorner.longitude;\r\n  const longitude0 = longitude + width * granXCos;\r\n  const longitude1 = longitude + height * granYSin;\r\n  const longitude2 = longitude + height * granYSin + width * granXCos;\r\n\r\n  const east = Math.max(longitude, longitude0, longitude1, longitude2);\r\n  const west = Math.min(longitude, longitude0, longitude1, longitude2);\r\n\r\n  return {\r\n    north: north,\r\n    south: south,\r\n    east: east,\r\n    west: west,\r\n    granYCos: granYCos,\r\n    granYSin: granYSin,\r\n    granXCos: granXCos,\r\n    granXSin: granXSin,\r\n    nwCorner: nwCorner,\r\n  };\r\n}\r\n\r\n/**\r\n * @private\r\n */\r\nRectangleGeometryLibrary.computeOptions = function (\r\n  rectangle,\r\n  granularity,\r\n  rotation,\r\n  stRotation,\r\n  boundingRectangleScratch,\r\n  nwCornerResult,\r\n  stNwCornerResult\r\n) {\r\n  let east = rectangle.east;\r\n  let west = rectangle.west;\r\n  let north = rectangle.north;\r\n  let south = rectangle.south;\r\n\r\n  let northCap = false;\r\n  let southCap = false;\r\n\r\n  if (north === CesiumMath.PI_OVER_TWO) {\r\n    northCap = true;\r\n  }\r\n  if (south === -CesiumMath.PI_OVER_TWO) {\r\n    southCap = true;\r\n  }\r\n\r\n  let dx;\r\n  const dy = north - south;\r\n  if (west > east) {\r\n    dx = CesiumMath.TWO_PI - west + east;\r\n  } else {\r\n    dx = east - west;\r\n  }\r\n\r\n  const width = Math.ceil(dx / granularity) + 1;\r\n  const height = Math.ceil(dy / granularity) + 1;\r\n  const granularityX = dx / (width - 1);\r\n  const granularityY = dy / (height - 1);\r\n\r\n  const nwCorner = Rectangle.northwest(rectangle, nwCornerResult);\r\n  const center = Rectangle.center(rectangle, centerScratch);\r\n  if (rotation !== 0 || stRotation !== 0) {\r\n    if (center.longitude < nwCorner.longitude) {\r\n      center.longitude += CesiumMath.TWO_PI;\r\n    }\r\n    centerCartesian = proj.project(center, centerCartesian);\r\n  }\r\n\r\n  const granYCos = granularityY;\r\n  const granXCos = granularityX;\r\n  const granYSin = 0.0;\r\n  const granXSin = 0.0;\r\n\r\n  const boundingRectangle = Rectangle.clone(\r\n    rectangle,\r\n    boundingRectangleScratch\r\n  );\r\n\r\n  const computedOptions = {\r\n    granYCos: granYCos,\r\n    granYSin: granYSin,\r\n    granXCos: granXCos,\r\n    granXSin: granXSin,\r\n    nwCorner: nwCorner,\r\n    boundingRectangle: boundingRectangle,\r\n    width: width,\r\n    height: height,\r\n    northCap: northCap,\r\n    southCap: southCap,\r\n  };\r\n\r\n  if (rotation !== 0) {\r\n    const rotationOptions = getRotationOptions(\r\n      nwCorner,\r\n      rotation,\r\n      granularityX,\r\n      granularityY,\r\n      center,\r\n      width,\r\n      height\r\n    );\r\n    north = rotationOptions.north;\r\n    south = rotationOptions.south;\r\n    east = rotationOptions.east;\r\n    west = rotationOptions.west;\r\n\r\n    //>>includeStart('debug', pragmas.debug);\r\n    if (\r\n      north < -CesiumMath.PI_OVER_TWO ||\r\n      north > CesiumMath.PI_OVER_TWO ||\r\n      south < -CesiumMath.PI_OVER_TWO ||\r\n      south > CesiumMath.PI_OVER_TWO\r\n    ) {\r\n      throw new DeveloperError(\r\n        \"Rotated rectangle is invalid.  It crosses over either the north or south pole.\"\r\n      );\r\n    }\r\n    //>>includeEnd('debug')\r\n\r\n    computedOptions.granYCos = rotationOptions.granYCos;\r\n    computedOptions.granYSin = rotationOptions.granYSin;\r\n    computedOptions.granXCos = rotationOptions.granXCos;\r\n    computedOptions.granXSin = rotationOptions.granXSin;\r\n\r\n    boundingRectangle.north = north;\r\n    boundingRectangle.south = south;\r\n    boundingRectangle.east = east;\r\n    boundingRectangle.west = west;\r\n  }\r\n\r\n  if (stRotation !== 0) {\r\n    rotation = rotation - stRotation;\r\n    const stNwCorner = Rectangle.northwest(boundingRectangle, stNwCornerResult);\r\n\r\n    const stRotationOptions = getRotationOptions(\r\n      stNwCorner,\r\n      rotation,\r\n      granularityX,\r\n      granularityY,\r\n      center,\r\n      width,\r\n      height\r\n    );\r\n\r\n    computedOptions.stGranYCos = stRotationOptions.granYCos;\r\n    computedOptions.stGranXCos = stRotationOptions.granXCos;\r\n    computedOptions.stGranYSin = stRotationOptions.granYSin;\r\n    computedOptions.stGranXSin = stRotationOptions.granXSin;\r\n    computedOptions.stNwCorner = stNwCorner;\r\n    computedOptions.stWest = stRotationOptions.west;\r\n    computedOptions.stSouth = stRotationOptions.south;\r\n  }\r\n\r\n  return computedOptions;\r\n};\r\nexport default RectangleGeometryLibrary;\r\n"],"names":["defined","Matrix2","Cartesian3","Cartographic","GeographicProjection","CesiumMath","Rectangle","DeveloperError"],"mappings":"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"}