{"version":3,"file":"createCylinderOutlineGeometry.js","sources":["../../../packages/engine/Source/Core/CylinderOutlineGeometry.js","../../../packages/engine/Source/WorkersES6/createCylinderOutlineGeometry.js"],"sourcesContent":["import BoundingSphere from \"./BoundingSphere.js\";\r\nimport Cartesian2 from \"./Cartesian2.js\";\r\nimport Cartesian3 from \"./Cartesian3.js\";\r\nimport Check from \"./Check.js\";\r\nimport ComponentDatatype from \"./ComponentDatatype.js\";\r\nimport CylinderGeometryLibrary from \"./CylinderGeometryLibrary.js\";\r\nimport defaultValue from \"./defaultValue.js\";\r\nimport defined from \"./defined.js\";\r\nimport DeveloperError from \"./DeveloperError.js\";\r\nimport Geometry from \"./Geometry.js\";\r\nimport GeometryAttribute from \"./GeometryAttribute.js\";\r\nimport GeometryAttributes from \"./GeometryAttributes.js\";\r\nimport GeometryOffsetAttribute from \"./GeometryOffsetAttribute.js\";\r\nimport IndexDatatype from \"./IndexDatatype.js\";\r\nimport PrimitiveType from \"./PrimitiveType.js\";\r\n\r\nconst radiusScratch = new Cartesian2();\r\n\r\n/**\r\n * A description of the outline of a cylinder.\r\n *\r\n * @alias CylinderOutlineGeometry\r\n * @constructor\r\n *\r\n * @param {Object} options Object with the following properties:\r\n * @param {Number} options.length The length of the cylinder.\r\n * @param {Number} options.topRadius The radius of the top of the cylinder.\r\n * @param {Number} options.bottomRadius The radius of the bottom of the cylinder.\r\n * @param {Number} [options.slices=128] The number of edges around the perimeter of the cylinder.\r\n * @param {Number} [options.numberOfVerticalLines=16] Number of lines to draw between the top and bottom surfaces of the cylinder.\r\n *\r\n * @exception {DeveloperError} options.length must be greater than 0.\r\n * @exception {DeveloperError} options.topRadius must be greater than 0.\r\n * @exception {DeveloperError} options.bottomRadius must be greater than 0.\r\n * @exception {DeveloperError} bottomRadius and topRadius cannot both equal 0.\r\n * @exception {DeveloperError} options.slices must be greater than or equal to 3.\r\n *\r\n * @see CylinderOutlineGeometry.createGeometry\r\n *\r\n * @example\r\n * // create cylinder geometry\r\n * const cylinder = new Cesium.CylinderOutlineGeometry({\r\n *     length: 200000,\r\n *     topRadius: 80000,\r\n *     bottomRadius: 200000,\r\n * });\r\n * const geometry = Cesium.CylinderOutlineGeometry.createGeometry(cylinder);\r\n */\r\nfunction CylinderOutlineGeometry(options) {\r\n  options = defaultValue(options, defaultValue.EMPTY_OBJECT);\r\n\r\n  const length = options.length;\r\n  const topRadius = options.topRadius;\r\n  const bottomRadius = options.bottomRadius;\r\n  const slices = defaultValue(options.slices, 128);\r\n  const numberOfVerticalLines = Math.max(\r\n    defaultValue(options.numberOfVerticalLines, 16),\r\n    0\r\n  );\r\n\r\n  //>>includeStart('debug', pragmas.debug);\r\n  Check.typeOf.number(\"options.positions\", length);\r\n  Check.typeOf.number(\"options.topRadius\", topRadius);\r\n  Check.typeOf.number(\"options.bottomRadius\", bottomRadius);\r\n  Check.typeOf.number.greaterThanOrEquals(\"options.slices\", slices, 3);\r\n  if (\r\n    defined(options.offsetAttribute) &&\r\n    options.offsetAttribute === GeometryOffsetAttribute.TOP\r\n  ) {\r\n    throw new DeveloperError(\r\n      \"GeometryOffsetAttribute.TOP is not a supported options.offsetAttribute for this geometry.\"\r\n    );\r\n  }\r\n  //>>includeEnd('debug');\r\n\r\n  this._length = length;\r\n  this._topRadius = topRadius;\r\n  this._bottomRadius = bottomRadius;\r\n  this._slices = slices;\r\n  this._numberOfVerticalLines = numberOfVerticalLines;\r\n  this._offsetAttribute = options.offsetAttribute;\r\n  this._workerName = \"createCylinderOutlineGeometry\";\r\n}\r\n\r\n/**\r\n * The number of elements used to pack the object into an array.\r\n * @type {Number}\r\n */\r\nCylinderOutlineGeometry.packedLength = 6;\r\n\r\n/**\r\n * Stores the provided instance into the provided array.\r\n *\r\n * @param {CylinderOutlineGeometry} value The value to pack.\r\n * @param {Number[]} array The array to pack into.\r\n * @param {Number} [startingIndex=0] The index into the array at which to start packing the elements.\r\n *\r\n * @returns {Number[]} The array that was packed into\r\n */\r\nCylinderOutlineGeometry.pack = function (value, array, startingIndex) {\r\n  //>>includeStart('debug', pragmas.debug);\r\n  Check.typeOf.object(\"value\", value);\r\n  Check.defined(\"array\", array);\r\n  //>>includeEnd('debug');\r\n\r\n  startingIndex = defaultValue(startingIndex, 0);\r\n\r\n  array[startingIndex++] = value._length;\r\n  array[startingIndex++] = value._topRadius;\r\n  array[startingIndex++] = value._bottomRadius;\r\n  array[startingIndex++] = value._slices;\r\n  array[startingIndex++] = value._numberOfVerticalLines;\r\n  array[startingIndex] = defaultValue(value._offsetAttribute, -1);\r\n\r\n  return array;\r\n};\r\n\r\nconst scratchOptions = {\r\n  length: undefined,\r\n  topRadius: undefined,\r\n  bottomRadius: undefined,\r\n  slices: undefined,\r\n  numberOfVerticalLines: undefined,\r\n  offsetAttribute: undefined,\r\n};\r\n\r\n/**\r\n * Retrieves an instance from a packed array.\r\n *\r\n * @param {Number[]} array The packed array.\r\n * @param {Number} [startingIndex=0] The starting index of the element to be unpacked.\r\n * @param {CylinderOutlineGeometry} [result] The object into which to store the result.\r\n * @returns {CylinderOutlineGeometry} The modified result parameter or a new CylinderOutlineGeometry instance if one was not provided.\r\n */\r\nCylinderOutlineGeometry.unpack = function (array, startingIndex, result) {\r\n  //>>includeStart('debug', pragmas.debug);\r\n  Check.defined(\"array\", array);\r\n  //>>includeEnd('debug');\r\n\r\n  startingIndex = defaultValue(startingIndex, 0);\r\n\r\n  const length = array[startingIndex++];\r\n  const topRadius = array[startingIndex++];\r\n  const bottomRadius = array[startingIndex++];\r\n  const slices = array[startingIndex++];\r\n  const numberOfVerticalLines = array[startingIndex++];\r\n  const offsetAttribute = array[startingIndex];\r\n\r\n  if (!defined(result)) {\r\n    scratchOptions.length = length;\r\n    scratchOptions.topRadius = topRadius;\r\n    scratchOptions.bottomRadius = bottomRadius;\r\n    scratchOptions.slices = slices;\r\n    scratchOptions.numberOfVerticalLines = numberOfVerticalLines;\r\n    scratchOptions.offsetAttribute =\r\n      offsetAttribute === -1 ? undefined : offsetAttribute;\r\n    return new CylinderOutlineGeometry(scratchOptions);\r\n  }\r\n\r\n  result._length = length;\r\n  result._topRadius = topRadius;\r\n  result._bottomRadius = bottomRadius;\r\n  result._slices = slices;\r\n  result._numberOfVerticalLines = numberOfVerticalLines;\r\n  result._offsetAttribute =\r\n    offsetAttribute === -1 ? undefined : offsetAttribute;\r\n\r\n  return result;\r\n};\r\n\r\n/**\r\n * Computes the geometric representation of an outline of a cylinder, including its vertices, indices, and a bounding sphere.\r\n *\r\n * @param {CylinderOutlineGeometry} cylinderGeometry A description of the cylinder outline.\r\n * @returns {Geometry|undefined} The computed vertices and indices.\r\n */\r\nCylinderOutlineGeometry.createGeometry = function (cylinderGeometry) {\r\n  let length = cylinderGeometry._length;\r\n  const topRadius = cylinderGeometry._topRadius;\r\n  const bottomRadius = cylinderGeometry._bottomRadius;\r\n  const slices = cylinderGeometry._slices;\r\n  const numberOfVerticalLines = cylinderGeometry._numberOfVerticalLines;\r\n\r\n  if (\r\n    length <= 0 ||\r\n    topRadius < 0 ||\r\n    bottomRadius < 0 ||\r\n    (topRadius === 0 && bottomRadius === 0)\r\n  ) {\r\n    return;\r\n  }\r\n\r\n  const numVertices = slices * 2;\r\n\r\n  const positions = CylinderGeometryLibrary.computePositions(\r\n    length,\r\n    topRadius,\r\n    bottomRadius,\r\n    slices,\r\n    false\r\n  );\r\n  let numIndices = slices * 2;\r\n  let numSide;\r\n  if (numberOfVerticalLines > 0) {\r\n    const numSideLines = Math.min(numberOfVerticalLines, slices);\r\n    numSide = Math.round(slices / numSideLines);\r\n    numIndices += numSideLines;\r\n  }\r\n\r\n  const indices = IndexDatatype.createTypedArray(numVertices, numIndices * 2);\r\n  let index = 0;\r\n  let i;\r\n  for (i = 0; i < slices - 1; i++) {\r\n    indices[index++] = i;\r\n    indices[index++] = i + 1;\r\n    indices[index++] = i + slices;\r\n    indices[index++] = i + 1 + slices;\r\n  }\r\n\r\n  indices[index++] = slices - 1;\r\n  indices[index++] = 0;\r\n  indices[index++] = slices + slices - 1;\r\n  indices[index++] = slices;\r\n\r\n  if (numberOfVerticalLines > 0) {\r\n    for (i = 0; i < slices; i += numSide) {\r\n      indices[index++] = i;\r\n      indices[index++] = i + slices;\r\n    }\r\n  }\r\n\r\n  const attributes = new GeometryAttributes();\r\n  attributes.position = new GeometryAttribute({\r\n    componentDatatype: ComponentDatatype.DOUBLE,\r\n    componentsPerAttribute: 3,\r\n    values: positions,\r\n  });\r\n\r\n  radiusScratch.x = length * 0.5;\r\n  radiusScratch.y = Math.max(bottomRadius, topRadius);\r\n\r\n  const boundingSphere = new BoundingSphere(\r\n    Cartesian3.ZERO,\r\n    Cartesian2.magnitude(radiusScratch)\r\n  );\r\n\r\n  if (defined(cylinderGeometry._offsetAttribute)) {\r\n    length = positions.length;\r\n    const offsetValue =\r\n      cylinderGeometry._offsetAttribute === GeometryOffsetAttribute.NONE\r\n        ? 0\r\n        : 1;\r\n    const applyOffset = new Uint8Array(length / 3).fill(offsetValue);\r\n    attributes.applyOffset = new GeometryAttribute({\r\n      componentDatatype: ComponentDatatype.UNSIGNED_BYTE,\r\n      componentsPerAttribute: 1,\r\n      values: applyOffset,\r\n    });\r\n  }\r\n\r\n  return new Geometry({\r\n    attributes: attributes,\r\n    indices: indices,\r\n    primitiveType: PrimitiveType.LINES,\r\n    boundingSphere: boundingSphere,\r\n    offsetAttribute: cylinderGeometry._offsetAttribute,\r\n  });\r\n};\r\nexport default CylinderOutlineGeometry;\r\n","import CylinderOutlineGeometry from \"../Core/CylinderOutlineGeometry.js\";\r\nimport defined from \"../Core/defined.js\";\r\n\r\nfunction createCylinderOutlineGeometry(cylinderGeometry, offset) {\r\n  if (defined(offset)) {\r\n    cylinderGeometry = CylinderOutlineGeometry.unpack(cylinderGeometry, offset);\r\n  }\r\n  return CylinderOutlineGeometry.createGeometry(cylinderGeometry);\r\n}\r\nexport default createCylinderOutlineGeometry;\r\n"],"names":["Cartesian2","defaultValue","Check","defined","GeometryOffsetAttribute","DeveloperError","CylinderGeometryLibrary","IndexDatatype","GeometryAttributes","GeometryAttribute","ComponentDatatype","BoundingSphere","Cartesian3","Geometry","PrimitiveType"],"mappings":"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"}