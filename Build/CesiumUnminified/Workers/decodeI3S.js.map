{"version":3,"file":"decodeI3S.js","sources":["../../../packages/engine/Source/WorkersES6/decodeI3S.js"],"sourcesContent":["/* global require */\r\nimport createTaskProcessorWorker from \"./createTaskProcessorWorker.js\";\r\nimport defined from \"../Core/defined.js\";\r\nimport WebMercatorProjection from \"../Core/WebMercatorProjection.js\";\r\nimport Ellipsoid from \"../Core/Ellipsoid.js\";\r\nimport Cartographic from \"../Core/Cartographic.js\";\r\nimport Cartesian3 from \"../Core/Cartesian3.js\";\r\nimport Matrix3 from \"../Core/Matrix3.js\";\r\nimport CesiumMath from \"../Core/Math.js\";\r\n\r\nlet draco;\r\n\r\nfunction bilinearInterpolate(tx, ty, h00, h10, h01, h11) {\r\n  const a = h00 * (1 - tx) + h10 * tx;\r\n  const b = h01 * (1 - tx) + h11 * tx;\r\n  return a * (1 - ty) + b * ty;\r\n}\r\n\r\nfunction sampleMap(u, v, width, data) {\r\n  const address = u + v * width;\r\n  return data[address];\r\n}\r\n\r\nfunction sampleGeoid(sampleX, sampleY, geoidData) {\r\n  const extent = geoidData.nativeExtent;\r\n  let x =\r\n    ((sampleX - extent.west) / (extent.east - extent.west)) *\r\n    (geoidData.width - 1);\r\n  let y =\r\n    ((sampleY - extent.south) / (extent.north - extent.south)) *\r\n    (geoidData.height - 1);\r\n  const xi = Math.floor(x);\r\n  let yi = Math.floor(y);\r\n\r\n  x -= xi;\r\n  y -= yi;\r\n\r\n  const xNext = xi < geoidData.width ? xi + 1 : xi;\r\n  let yNext = yi < geoidData.height ? yi + 1 : yi;\r\n\r\n  yi = geoidData.height - 1 - yi;\r\n  yNext = geoidData.height - 1 - yNext;\r\n\r\n  const h00 = sampleMap(xi, yi, geoidData.width, geoidData.buffer);\r\n  const h10 = sampleMap(xNext, yi, geoidData.width, geoidData.buffer);\r\n  const h01 = sampleMap(xi, yNext, geoidData.width, geoidData.buffer);\r\n  const h11 = sampleMap(xNext, yNext, geoidData.width, geoidData.buffer);\r\n\r\n  let finalHeight = bilinearInterpolate(x, y, h00, h10, h01, h11);\r\n  finalHeight = finalHeight * geoidData.scale + geoidData.offset;\r\n  return finalHeight;\r\n}\r\n\r\nfunction sampleGeoidFromList(lon, lat, geoidDataList) {\r\n  for (let i = 0; i < geoidDataList.length; i++) {\r\n    const localExtent = geoidDataList[i].nativeExtent;\r\n\r\n    let localPt = new Cartesian3();\r\n    if (geoidDataList[i].projectionType === \"WebMercator\") {\r\n      const radii = geoidDataList[i].projection._ellipsoid._radii;\r\n      const webMercatorProj = new WebMercatorProjection(\r\n        new Ellipsoid(radii.x, radii.y, radii.z)\r\n      );\r\n      localPt = webMercatorProj.project(new Cartographic(lon, lat, 0));\r\n    } else {\r\n      localPt.x = lon;\r\n      localPt.y = lat;\r\n    }\r\n\r\n    if (\r\n      localPt.x > localExtent.west &&\r\n      localPt.x < localExtent.east &&\r\n      localPt.y > localExtent.south &&\r\n      localPt.y < localExtent.north\r\n    ) {\r\n      return sampleGeoid(localPt.x, localPt.y, geoidDataList[i]);\r\n    }\r\n  }\r\n\r\n  return 0;\r\n}\r\n\r\nfunction orthometricToEllipsoidal(\r\n  vertexCount,\r\n  position,\r\n  scale_x,\r\n  scale_y,\r\n  center,\r\n  geoidDataList,\r\n  fast\r\n) {\r\n  if (fast) {\r\n    // Geometry is already relative to the tile origin which has already been shifted to account for geoid height\r\n    // Nothing to do here\r\n    return;\r\n  }\r\n\r\n  // For more precision, sample the geoid height at each vertex and shift by the difference between that value and the height at the center of the tile\r\n  const centerHeight = sampleGeoidFromList(\r\n    center.longitude,\r\n    center.latitude,\r\n    geoidDataList\r\n  );\r\n\r\n  for (let i = 0; i < vertexCount; ++i) {\r\n    const height = sampleGeoidFromList(\r\n      center.longitude + CesiumMath.toRadians(scale_x * position[i * 3]),\r\n      center.latitude + CesiumMath.toRadians(scale_y * position[i * 3 + 1]),\r\n      geoidDataList\r\n    );\r\n    position[i * 3 + 2] += height - centerHeight;\r\n  }\r\n}\r\n\r\nfunction transformToLocal(\r\n  vertexCount,\r\n  positions,\r\n  normals,\r\n  cartographicCenter,\r\n  cartesianCenter,\r\n  parentRotation,\r\n  ellipsoidRadiiSquare,\r\n  scale_x,\r\n  scale_y\r\n) {\r\n  if (vertexCount === 0 || !defined(positions) || positions.length === 0) {\r\n    return;\r\n  }\r\n\r\n  const ellipsoid = new Ellipsoid(\r\n    Math.sqrt(ellipsoidRadiiSquare.x),\r\n    Math.sqrt(ellipsoidRadiiSquare.y),\r\n    Math.sqrt(ellipsoidRadiiSquare.z)\r\n  );\r\n  for (let i = 0; i < vertexCount; ++i) {\r\n    const indexOffset = i * 3;\r\n    const indexOffset1 = indexOffset + 1;\r\n    const indexOffset2 = indexOffset + 2;\r\n\r\n    const cartographic = new Cartographic();\r\n    cartographic.longitude =\r\n      cartographicCenter.longitude +\r\n      CesiumMath.toRadians(scale_x * positions[indexOffset]);\r\n\r\n    cartographic.latitude =\r\n      cartographicCenter.latitude +\r\n      CesiumMath.toRadians(scale_y * positions[indexOffset1]);\r\n    cartographic.height = cartographicCenter.height + positions[indexOffset2];\r\n\r\n    const position = {};\r\n    ellipsoid.cartographicToCartesian(cartographic, position);\r\n\r\n    position.x -= cartesianCenter.x;\r\n    position.y -= cartesianCenter.y;\r\n    position.z -= cartesianCenter.z;\r\n\r\n    const rotatedPosition = {};\r\n    Matrix3.multiplyByVector(parentRotation, position, rotatedPosition);\r\n\r\n    positions[indexOffset] = rotatedPosition.x;\r\n    positions[indexOffset1] = rotatedPosition.y;\r\n    positions[indexOffset2] = rotatedPosition.z;\r\n\r\n    if (defined(normals)) {\r\n      const normal = new Cartesian3(\r\n        normals[indexOffset],\r\n        normals[indexOffset1],\r\n        normals[indexOffset2]\r\n      );\r\n\r\n      const rotatedNormal = {};\r\n      Matrix3.multiplyByVector(parentRotation, normal, rotatedNormal);\r\n\r\n      // TODO: check if normals are Z-UP or Y-UP and flip y and z\r\n      normals[indexOffset] = rotatedNormal.x;\r\n      normals[indexOffset1] = rotatedNormal.y;\r\n      normals[indexOffset2] = rotatedNormal.z;\r\n    }\r\n  }\r\n}\r\n\r\nfunction cropUVs(vertexCount, uv0s, uvRegions) {\r\n  for (let vertexIndex = 0; vertexIndex < vertexCount; ++vertexIndex) {\r\n    const minU = uvRegions[vertexIndex * 4] / 65535.0;\r\n    const minV = uvRegions[vertexIndex * 4 + 1] / 65535.0;\r\n    const scaleU =\r\n      (uvRegions[vertexIndex * 4 + 2] - uvRegions[vertexIndex * 4]) / 65535.0;\r\n    const scaleV =\r\n      (uvRegions[vertexIndex * 4 + 3] - uvRegions[vertexIndex * 4 + 1]) /\r\n      65535.0;\r\n\r\n    uv0s[vertexIndex * 2] *= scaleU;\r\n    uv0s[vertexIndex * 2] += minU;\r\n\r\n    uv0s[vertexIndex * 2 + 1] *= scaleV;\r\n    uv0s[vertexIndex * 2 + 1] += minV;\r\n  }\r\n}\r\n\r\nfunction generateGltfBuffer(\r\n  vertexCount,\r\n  indices,\r\n  positions,\r\n  normals,\r\n  uv0s,\r\n  colors\r\n) {\r\n  if (vertexCount === 0 || !defined(positions) || positions.length === 0) {\r\n    return {\r\n      buffers: [],\r\n      bufferViews: [],\r\n      accessors: [],\r\n      meshes: [],\r\n      nodes: [],\r\n      nodesInScene: [],\r\n    };\r\n  }\r\n\r\n  const buffers = [];\r\n  const bufferViews = [];\r\n  const accessors = [];\r\n  const meshes = [];\r\n  const nodes = [];\r\n  const nodesInScene = [];\r\n\r\n  // If we provide indices, then the vertex count is the length\r\n  // of that array, otherwise we assume non-indexed triangle\r\n  if (defined(indices)) {\r\n    vertexCount = indices.length;\r\n  }\r\n\r\n  // Allocate array\r\n  const indexArray = new Uint32Array(vertexCount);\r\n\r\n  if (defined(indices)) {\r\n    // Set the indices\r\n    for (let vertexIndex = 0; vertexIndex < vertexCount; ++vertexIndex) {\r\n      indexArray[vertexIndex] = indices[vertexIndex];\r\n    }\r\n  } else {\r\n    // Generate indices\r\n    for (\r\n      let newVertexIndex = 0;\r\n      newVertexIndex < vertexCount;\r\n      ++newVertexIndex\r\n    ) {\r\n      indexArray[newVertexIndex] = newVertexIndex;\r\n    }\r\n  }\r\n\r\n  // Push to the buffers, bufferViews and accessors\r\n  const indicesBlob = new Blob([indexArray], { type: \"application/binary\" });\r\n  const indicesURL = URL.createObjectURL(indicesBlob);\r\n\r\n  const endIndex = vertexCount;\r\n\r\n  // POSITIONS\r\n  const meshPositions = positions.subarray(0, endIndex * 3);\r\n  const positionsBlob = new Blob([meshPositions], {\r\n    type: \"application/binary\",\r\n  });\r\n  const positionsURL = URL.createObjectURL(positionsBlob);\r\n\r\n  let minX = Number.POSITIVE_INFINITY;\r\n  let maxX = Number.NEGATIVE_INFINITY;\r\n  let minY = Number.POSITIVE_INFINITY;\r\n  let maxY = Number.NEGATIVE_INFINITY;\r\n  let minZ = Number.POSITIVE_INFINITY;\r\n  let maxZ = Number.NEGATIVE_INFINITY;\r\n\r\n  for (let i = 0; i < meshPositions.length / 3; i++) {\r\n    minX = Math.min(minX, meshPositions[i * 3 + 0]);\r\n    maxX = Math.max(maxX, meshPositions[i * 3 + 0]);\r\n    minY = Math.min(minY, meshPositions[i * 3 + 1]);\r\n    maxY = Math.max(maxY, meshPositions[i * 3 + 1]);\r\n    minZ = Math.min(minZ, meshPositions[i * 3 + 2]);\r\n    maxZ = Math.max(maxZ, meshPositions[i * 3 + 2]);\r\n  }\r\n\r\n  // NORMALS\r\n  const meshNormals = normals ? normals.subarray(0, endIndex * 3) : undefined;\r\n  let normalsURL;\r\n  if (defined(meshNormals)) {\r\n    const normalsBlob = new Blob([meshNormals], {\r\n      type: \"application/binary\",\r\n    });\r\n    normalsURL = URL.createObjectURL(normalsBlob);\r\n  }\r\n\r\n  // UV0s\r\n  const meshUv0s = uv0s ? uv0s.subarray(0, endIndex * 2) : undefined;\r\n  let uv0URL;\r\n  if (defined(meshUv0s)) {\r\n    const uv0Blob = new Blob([meshUv0s], { type: \"application/binary\" });\r\n    uv0URL = URL.createObjectURL(uv0Blob);\r\n  }\r\n\r\n  // COLORS\r\n  const meshColorsInBytes = defined(colors)\r\n    ? colors.subarray(0, endIndex * 4)\r\n    : undefined;\r\n  let colorsURL;\r\n  if (defined(meshColorsInBytes)) {\r\n    const colorsBlob = new Blob([meshColorsInBytes], {\r\n      type: \"application/binary\",\r\n    });\r\n    colorsURL = URL.createObjectURL(colorsBlob);\r\n  }\r\n\r\n  const posIndex = 0;\r\n  let normalIndex = 0;\r\n  let uv0Index = 0;\r\n  let colorIndex = 0;\r\n  let indicesIndex = 0;\r\n\r\n  let currentIndex = posIndex;\r\n\r\n  const attributes = {};\r\n\r\n  // POSITIONS\r\n  attributes.POSITION = posIndex;\r\n  buffers.push({\r\n    uri: positionsURL,\r\n    byteLength: meshPositions.byteLength,\r\n  });\r\n  bufferViews.push({\r\n    buffer: posIndex,\r\n    byteOffset: 0,\r\n    byteLength: meshPositions.byteLength,\r\n    target: 34962,\r\n  });\r\n  accessors.push({\r\n    bufferView: posIndex,\r\n    byteOffset: 0,\r\n    componentType: 5126,\r\n    count: vertexCount,\r\n    type: \"VEC3\",\r\n    max: [minX, minY, minZ],\r\n    min: [maxX, maxY, maxZ],\r\n  });\r\n\r\n  // NORMALS\r\n  if (defined(normalsURL)) {\r\n    ++currentIndex;\r\n    normalIndex = currentIndex;\r\n    attributes.NORMAL = normalIndex;\r\n    buffers.push({\r\n      uri: normalsURL,\r\n      byteLength: meshNormals.byteLength,\r\n    });\r\n    bufferViews.push({\r\n      buffer: normalIndex,\r\n      byteOffset: 0,\r\n      byteLength: meshNormals.byteLength,\r\n      target: 34962,\r\n    });\r\n    accessors.push({\r\n      bufferView: normalIndex,\r\n      byteOffset: 0,\r\n      componentType: 5126,\r\n      count: vertexCount,\r\n      type: \"VEC3\",\r\n    });\r\n  }\r\n\r\n  // UV0\r\n  if (defined(uv0URL)) {\r\n    ++currentIndex;\r\n    uv0Index = currentIndex;\r\n    attributes.TEXCOORD_0 = uv0Index;\r\n    buffers.push({\r\n      uri: uv0URL,\r\n      byteLength: meshUv0s.byteLength,\r\n    });\r\n    bufferViews.push({\r\n      buffer: uv0Index,\r\n      byteOffset: 0,\r\n      byteLength: meshUv0s.byteLength,\r\n      target: 34962,\r\n    });\r\n    accessors.push({\r\n      bufferView: uv0Index,\r\n      byteOffset: 0,\r\n      componentType: 5126,\r\n      count: vertexCount,\r\n      type: \"VEC2\",\r\n    });\r\n  }\r\n\r\n  // COLORS\r\n  if (defined(colorsURL)) {\r\n    ++currentIndex;\r\n    colorIndex = currentIndex;\r\n    attributes.COLOR_0 = colorIndex;\r\n    buffers.push({\r\n      uri: colorsURL,\r\n      byteLength: meshColorsInBytes.byteLength,\r\n    });\r\n    bufferViews.push({\r\n      buffer: colorIndex,\r\n      byteOffset: 0,\r\n      byteLength: meshColorsInBytes.byteLength,\r\n      target: 34962,\r\n    });\r\n    accessors.push({\r\n      bufferView: colorIndex,\r\n      byteOffset: 0,\r\n      componentType: 5121,\r\n      normalized: true,\r\n      count: vertexCount,\r\n      type: \"VEC4\",\r\n    });\r\n  }\r\n\r\n  // INDICES\r\n  ++currentIndex;\r\n  indicesIndex = currentIndex;\r\n  buffers.push({\r\n    uri: indicesURL,\r\n    byteLength: indexArray.byteLength,\r\n  });\r\n  bufferViews.push({\r\n    buffer: indicesIndex,\r\n    byteOffset: 0,\r\n    byteLength: indexArray.byteLength,\r\n    target: 34963,\r\n  });\r\n  accessors.push({\r\n    bufferView: indicesIndex,\r\n    byteOffset: 0,\r\n    componentType: 5125,\r\n    count: vertexCount,\r\n    type: \"SCALAR\",\r\n  });\r\n\r\n  // Create a new mesh for this page\r\n  meshes.push({\r\n    primitives: [\r\n      {\r\n        attributes: attributes,\r\n        indices: indicesIndex,\r\n        material: 0,\r\n      },\r\n    ],\r\n  });\r\n  nodesInScene.push(0);\r\n  nodes.push({ mesh: 0 });\r\n\r\n  return {\r\n    buffers: buffers,\r\n    bufferViews: bufferViews,\r\n    accessors: accessors,\r\n    meshes: meshes,\r\n    nodes: nodes,\r\n    nodesInScene: nodesInScene,\r\n  };\r\n}\r\n\r\nfunction decode(data, schema, bufferInfo, featureData) {\r\n  const magicNumber = new Uint8Array(data, 0, 5);\r\n  if (\r\n    magicNumber[0] === \"D\".charCodeAt() &&\r\n    magicNumber[1] === \"R\".charCodeAt() &&\r\n    magicNumber[2] === \"A\".charCodeAt() &&\r\n    magicNumber[3] === \"C\".charCodeAt() &&\r\n    magicNumber[4] === \"O\".charCodeAt()\r\n  ) {\r\n    return decodeDracoEncodedGeometry(data, bufferInfo);\r\n  }\r\n  return decodeBinaryGeometry(data, schema, bufferInfo, featureData);\r\n}\r\n\r\nfunction decodeDracoEncodedGeometry(data) {\r\n  // Create the Draco decoder.\r\n  const dracoDecoderModule = draco;\r\n  const buffer = new dracoDecoderModule.DecoderBuffer();\r\n\r\n  const byteArray = new Uint8Array(data);\r\n  buffer.Init(byteArray, byteArray.length);\r\n\r\n  // Create a buffer to hold the encoded data.\r\n  const dracoDecoder = new dracoDecoderModule.Decoder();\r\n  const geometryType = dracoDecoder.GetEncodedGeometryType(buffer);\r\n  const metadataQuerier = new dracoDecoderModule.MetadataQuerier();\r\n\r\n  // Decode the encoded geometry.\r\n  // See: https://github.com/google/draco/blob/master/src/draco/javascript/emscripten/draco_web_decoder.idl\r\n  let dracoGeometry;\r\n  let status;\r\n  if (geometryType === dracoDecoderModule.TRIANGULAR_MESH) {\r\n    dracoGeometry = new dracoDecoderModule.Mesh();\r\n    status = dracoDecoder.DecodeBufferToMesh(buffer, dracoGeometry);\r\n  }\r\n\r\n  const decodedGeometry = {\r\n    vertexCount: [0],\r\n    featureCount: 0,\r\n  };\r\n\r\n  // if all is OK\r\n  if (defined(status) && status.ok() && dracoGeometry.ptr !== 0) {\r\n    const faceCount = dracoGeometry.num_faces();\r\n    const attributesCount = dracoGeometry.num_attributes();\r\n    const vertexCount = dracoGeometry.num_points();\r\n    decodedGeometry.indices = new Uint32Array(faceCount * 3);\r\n    const faces = decodedGeometry.indices;\r\n\r\n    decodedGeometry.vertexCount[0] = vertexCount;\r\n    decodedGeometry.scale_x = 1;\r\n    decodedGeometry.scale_y = 1;\r\n\r\n    // Decode faces\r\n    // @TODO: Replace that code with GetTrianglesUInt32Array for better efficiency\r\n    const face = new dracoDecoderModule.DracoInt32Array(3);\r\n    for (let faceIndex = 0; faceIndex < faceCount; ++faceIndex) {\r\n      dracoDecoder.GetFaceFromMesh(dracoGeometry, faceIndex, face);\r\n      faces[faceIndex * 3] = face.GetValue(0);\r\n      faces[faceIndex * 3 + 1] = face.GetValue(1);\r\n      faces[faceIndex * 3 + 2] = face.GetValue(2);\r\n    }\r\n\r\n    dracoDecoderModule.destroy(face);\r\n\r\n    for (let attrIndex = 0; attrIndex < attributesCount; ++attrIndex) {\r\n      const dracoAttribute = dracoDecoder.GetAttribute(\r\n        dracoGeometry,\r\n        attrIndex\r\n      );\r\n\r\n      const attributeData = decodeDracoAttribute(\r\n        dracoDecoderModule,\r\n        dracoDecoder,\r\n        dracoGeometry,\r\n        dracoAttribute,\r\n        vertexCount\r\n      );\r\n\r\n      // initial mapping\r\n      const dracoAttributeType = dracoAttribute.attribute_type();\r\n      let attributei3sName = \"unknown\";\r\n\r\n      if (dracoAttributeType === dracoDecoderModule.POSITION) {\r\n        attributei3sName = \"positions\";\r\n      } else if (dracoAttributeType === dracoDecoderModule.NORMAL) {\r\n        attributei3sName = \"normals\";\r\n      } else if (dracoAttributeType === dracoDecoderModule.COLOR) {\r\n        attributei3sName = \"colors\";\r\n      } else if (dracoAttributeType === dracoDecoderModule.TEX_COORD) {\r\n        attributei3sName = \"uv0s\";\r\n      }\r\n\r\n      // get the metadata\r\n      const metadata = dracoDecoder.GetAttributeMetadata(\r\n        dracoGeometry,\r\n        attrIndex\r\n      );\r\n\r\n      if (metadata.ptr !== 0) {\r\n        const numEntries = metadataQuerier.NumEntries(metadata);\r\n        for (let entry = 0; entry < numEntries; ++entry) {\r\n          const entryName = metadataQuerier.GetEntryName(metadata, entry);\r\n          if (entryName === \"i3s-scale_x\") {\r\n            decodedGeometry.scale_x = metadataQuerier.GetDoubleEntry(\r\n              metadata,\r\n              \"i3s-scale_x\"\r\n            );\r\n          } else if (entryName === \"i3s-scale_y\") {\r\n            decodedGeometry.scale_y = metadataQuerier.GetDoubleEntry(\r\n              metadata,\r\n              \"i3s-scale_y\"\r\n            );\r\n          } else if (entryName === \"i3s-attribute-type\") {\r\n            attributei3sName = metadataQuerier.GetStringEntry(\r\n              metadata,\r\n              \"i3s-attribute-type\"\r\n            );\r\n          }\r\n        }\r\n      }\r\n\r\n      if (defined(decodedGeometry[attributei3sName])) {\r\n        console.log(\"Attribute already exists\", attributei3sName);\r\n      }\r\n\r\n      decodedGeometry[attributei3sName] = attributeData;\r\n\r\n      if (attributei3sName === \"feature-index\") {\r\n        decodedGeometry.featureCount++;\r\n      }\r\n    }\r\n\r\n    dracoDecoderModule.destroy(dracoGeometry);\r\n  }\r\n\r\n  dracoDecoderModule.destroy(metadataQuerier);\r\n  dracoDecoderModule.destroy(dracoDecoder);\r\n\r\n  return decodedGeometry;\r\n}\r\n\r\nfunction decodeDracoAttribute(\r\n  dracoDecoderModule,\r\n  dracoDecoder,\r\n  dracoGeometry,\r\n  dracoAttribute,\r\n  vertexCount\r\n) {\r\n  const bufferSize = dracoAttribute.num_components() * vertexCount;\r\n  let dracoAttributeData;\r\n\r\n  const handlers = [\r\n    function () {}, // DT_INVALID - 0\r\n    function () {\r\n      // DT_INT8 - 1\r\n      dracoAttributeData = new dracoDecoderModule.DracoInt8Array(bufferSize);\r\n      const success = dracoDecoder.GetAttributeInt8ForAllPoints(\r\n        dracoGeometry,\r\n        dracoAttribute,\r\n        dracoAttributeData\r\n      );\r\n\r\n      if (!success) {\r\n        console.error(\"Bad stream\");\r\n      }\r\n      const attributeData = new Int8Array(bufferSize);\r\n      for (let i = 0; i < bufferSize; ++i) {\r\n        attributeData[i] = dracoAttributeData.GetValue(i);\r\n      }\r\n      return attributeData;\r\n    },\r\n    function () {\r\n      // DT_UINT8 - 2\r\n      dracoAttributeData = new dracoDecoderModule.DracoInt8Array(bufferSize);\r\n      const success = dracoDecoder.GetAttributeUInt8ForAllPoints(\r\n        dracoGeometry,\r\n        dracoAttribute,\r\n        dracoAttributeData\r\n      );\r\n\r\n      if (!success) {\r\n        console.error(\"Bad stream\");\r\n      }\r\n      const attributeData = new Uint8Array(bufferSize);\r\n      for (let i = 0; i < bufferSize; ++i) {\r\n        attributeData[i] = dracoAttributeData.GetValue(i);\r\n      }\r\n      return attributeData;\r\n    },\r\n    function () {\r\n      // DT_INT16 - 3\r\n      dracoAttributeData = new dracoDecoderModule.DracoInt16Array(bufferSize);\r\n      const success = dracoDecoder.GetAttributeInt16ForAllPoints(\r\n        dracoGeometry,\r\n        dracoAttribute,\r\n        dracoAttributeData\r\n      );\r\n\r\n      if (!success) {\r\n        console.error(\"Bad stream\");\r\n      }\r\n      const attributeData = new Int16Array(bufferSize);\r\n      for (let i = 0; i < bufferSize; ++i) {\r\n        attributeData[i] = dracoAttributeData.GetValue(i);\r\n      }\r\n      return attributeData;\r\n    },\r\n    function () {\r\n      // DT_UINT16 - 4\r\n      dracoAttributeData = new dracoDecoderModule.DracoInt16Array(bufferSize);\r\n      const success = dracoDecoder.GetAttributeUInt16ForAllPoints(\r\n        dracoGeometry,\r\n        dracoAttribute,\r\n        dracoAttributeData\r\n      );\r\n\r\n      if (!success) {\r\n        console.error(\"Bad stream\");\r\n      }\r\n      const attributeData = new Uint16Array(bufferSize);\r\n      for (let i = 0; i < bufferSize; ++i) {\r\n        attributeData[i] = dracoAttributeData.GetValue(i);\r\n      }\r\n      return attributeData;\r\n    },\r\n    function () {\r\n      // DT_INT32 - 5\r\n      dracoAttributeData = new dracoDecoderModule.DracoInt32Array(bufferSize);\r\n      const success = dracoDecoder.GetAttributeInt32ForAllPoints(\r\n        dracoGeometry,\r\n        dracoAttribute,\r\n        dracoAttributeData\r\n      );\r\n\r\n      if (!success) {\r\n        console.error(\"Bad stream\");\r\n      }\r\n      const attributeData = new Int32Array(bufferSize);\r\n      for (let i = 0; i < bufferSize; ++i) {\r\n        attributeData[i] = dracoAttributeData.GetValue(i);\r\n      }\r\n      return attributeData;\r\n    },\r\n    function () {\r\n      // DT_UINT32 - 6\r\n      dracoAttributeData = new dracoDecoderModule.DracoInt32Array(bufferSize);\r\n      const success = dracoDecoder.GetAttributeUInt32ForAllPoints(\r\n        dracoGeometry,\r\n        dracoAttribute,\r\n        dracoAttributeData\r\n      );\r\n\r\n      if (!success) {\r\n        console.error(\"Bad stream\");\r\n      }\r\n      const attributeData = new Uint32Array(bufferSize);\r\n      for (let i = 0; i < bufferSize; ++i) {\r\n        attributeData[i] = dracoAttributeData.GetValue(i);\r\n      }\r\n      return attributeData;\r\n    },\r\n    function () {\r\n      // DT_INT64 - 7\r\n    },\r\n    function () {\r\n      // DT_UINT64 - 8\r\n    },\r\n    function () {\r\n      // DT_FLOAT32 - 9\r\n      dracoAttributeData = new dracoDecoderModule.DracoFloat32Array(bufferSize);\r\n      const success = dracoDecoder.GetAttributeFloatForAllPoints(\r\n        dracoGeometry,\r\n        dracoAttribute,\r\n        dracoAttributeData\r\n      );\r\n\r\n      if (!success) {\r\n        console.error(\"Bad stream\");\r\n      }\r\n      const attributeData = new Float32Array(bufferSize);\r\n      for (let i = 0; i < bufferSize; ++i) {\r\n        attributeData[i] = dracoAttributeData.GetValue(i);\r\n      }\r\n      return attributeData;\r\n    },\r\n    function () {\r\n      // DT_FLOAT64 - 10\r\n    },\r\n    function () {\r\n      // DT_FLOAT32 - 11\r\n      dracoAttributeData = new dracoDecoderModule.DracoUInt8Array(bufferSize);\r\n      const success = dracoDecoder.GetAttributeUInt8ForAllPoints(\r\n        dracoGeometry,\r\n        dracoAttribute,\r\n        dracoAttributeData\r\n      );\r\n\r\n      if (!success) {\r\n        console.error(\"Bad stream\");\r\n      }\r\n      const attributeData = new Uint8Array(bufferSize);\r\n      for (let i = 0; i < bufferSize; ++i) {\r\n        attributeData[i] = dracoAttributeData.GetValue(i);\r\n      }\r\n      return attributeData;\r\n    },\r\n  ];\r\n\r\n  const attributeData = handlers[dracoAttribute.data_type()]();\r\n\r\n  if (defined(dracoAttributeData)) {\r\n    dracoDecoderModule.destroy(dracoAttributeData);\r\n  }\r\n\r\n  return attributeData;\r\n}\r\n\r\nconst binaryAttributeDecoders = {\r\n  position: function (decodedGeometry, data, offset) {\r\n    const count = decodedGeometry.vertexCount * 3;\r\n    decodedGeometry.positions = new Float32Array(data, offset, count);\r\n    offset += count * 4;\r\n    return offset;\r\n  },\r\n  normal: function (decodedGeometry, data, offset) {\r\n    const count = decodedGeometry.vertexCount * 3;\r\n    decodedGeometry.normals = new Float32Array(data, offset, count);\r\n    offset += count * 4;\r\n    return offset;\r\n  },\r\n  uv0: function (decodedGeometry, data, offset) {\r\n    const count = decodedGeometry.vertexCount * 2;\r\n    decodedGeometry.uv0s = new Float32Array(data, offset, count);\r\n    offset += count * 4;\r\n    return offset;\r\n  },\r\n  color: function (decodedGeometry, data, offset) {\r\n    const count = decodedGeometry.vertexCount * 4;\r\n    decodedGeometry.colors = new Uint8Array(data, offset, count);\r\n    offset += count;\r\n    return offset;\r\n  },\r\n  featureId: function (decodedGeometry, data, offset) {\r\n    // We don't need to use this for anything so just increment the offset\r\n    const count = decodedGeometry.featureCount;\r\n    offset += count * 8;\r\n    return offset;\r\n  },\r\n  id: function (decodedGeometry, data, offset) {\r\n    // We don't need to use this for anything so just increment the offset\r\n    const count = decodedGeometry.featureCount;\r\n    offset += count * 8;\r\n    return offset;\r\n  },\r\n  faceRange: function (decodedGeometry, data, offset) {\r\n    const count = decodedGeometry.featureCount * 2;\r\n    decodedGeometry.faceRange = new Uint32Array(data, offset, count);\r\n    offset += count * 4;\r\n    return offset;\r\n  },\r\n  uvRegion: function (decodedGeometry, data, offset) {\r\n    const count = decodedGeometry.vertexCount * 4;\r\n    decodedGeometry[\"uv-region\"] = new Uint16Array(data, offset, count);\r\n    offset += count * 2;\r\n    return offset;\r\n  },\r\n  region: function (decodedGeometry, data, offset) {\r\n    const count = decodedGeometry.vertexCount * 4;\r\n    decodedGeometry[\"uv-region\"] = new Uint16Array(data, offset, count);\r\n    offset += count * 2;\r\n    return offset;\r\n  },\r\n};\r\n\r\nfunction decodeBinaryGeometry(data, schema, bufferInfo, featureData) {\r\n  // From this spec:\r\n  // https://github.com/Esri/i3s-spec/blob/master/docs/1.7/defaultGeometrySchema.cmn.md\r\n  const decodedGeometry = {\r\n    vertexCount: 0,\r\n  };\r\n\r\n  const dataView = new DataView(data);\r\n\r\n  try {\r\n    let offset = 0;\r\n    decodedGeometry.vertexCount = dataView.getUint32(offset, 1);\r\n    offset += 4;\r\n\r\n    decodedGeometry.featureCount = dataView.getUint32(offset, 1);\r\n    offset += 4;\r\n\r\n    if (defined(bufferInfo)) {\r\n      for (\r\n        let attrIndex = 0;\r\n        attrIndex < bufferInfo.attributes.length;\r\n        attrIndex++\r\n      ) {\r\n        if (\r\n          defined(binaryAttributeDecoders[bufferInfo.attributes[attrIndex]])\r\n        ) {\r\n          offset = binaryAttributeDecoders[bufferInfo.attributes[attrIndex]](\r\n            decodedGeometry,\r\n            data,\r\n            offset\r\n          );\r\n        } else {\r\n          console.error(\r\n            \"Unknown decoder for\",\r\n            bufferInfo.attributes[attrIndex]\r\n          );\r\n        }\r\n      }\r\n    } else {\r\n      let ordering = schema.ordering;\r\n      let featureAttributeOrder = schema.featureAttributeOrder;\r\n\r\n      if (\r\n        defined(featureData) &&\r\n        defined(featureData.geometryData) &&\r\n        defined(featureData.geometryData[0]) &&\r\n        defined(featureData.geometryData[0].params)\r\n      ) {\r\n        ordering = Object.keys(\r\n          featureData.geometryData[0].params.vertexAttributes\r\n        );\r\n        featureAttributeOrder = Object.keys(\r\n          featureData.geometryData[0].params.featureAttributes\r\n        );\r\n      }\r\n\r\n      // Use default geometry schema\r\n      for (let i = 0; i < ordering.length; i++) {\r\n        const decoder = binaryAttributeDecoders[ordering[i]];\r\n        if (!defined(decoder)) {\r\n          console.log(ordering[i]);\r\n        }\r\n        offset = decoder(decodedGeometry, data, offset);\r\n      }\r\n\r\n      for (let j = 0; j < featureAttributeOrder.length; j++) {\r\n        const curDecoder = binaryAttributeDecoders[featureAttributeOrder[j]];\r\n        if (!defined(curDecoder)) {\r\n          console.log(featureAttributeOrder[j]);\r\n        }\r\n        offset = curDecoder(decodedGeometry, data, offset);\r\n      }\r\n    }\r\n  } catch (e) {\r\n    console.error(e);\r\n  }\r\n\r\n  decodedGeometry.scale_x = 1;\r\n  decodedGeometry.scale_y = 1;\r\n\r\n  return decodedGeometry;\r\n}\r\n\r\nfunction decodeI3S(parameters) {\r\n  // Decode the data into geometry\r\n  const geometryData = decode(\r\n    parameters.binaryData,\r\n    parameters.schema,\r\n    parameters.bufferInfo,\r\n    parameters.featureData\r\n  );\r\n\r\n  // Adjust height from orthometric to ellipsoidal\r\n  if (\r\n    defined(parameters.geoidDataList) &&\r\n    parameters.geoidDataList.length > 0\r\n  ) {\r\n    orthometricToEllipsoidal(\r\n      geometryData.vertexCount,\r\n      geometryData.positions,\r\n      geometryData.scale_x,\r\n      geometryData.scale_y,\r\n      parameters.cartographicCenter,\r\n      parameters.geoidDataList,\r\n      false\r\n    );\r\n  }\r\n\r\n  // Transform vertices to local\r\n  transformToLocal(\r\n    geometryData.vertexCount,\r\n    geometryData.positions,\r\n    geometryData.normals,\r\n    parameters.cartographicCenter,\r\n    parameters.cartesianCenter,\r\n    parameters.parentRotation,\r\n    parameters.ellipsoidRadiiSquare,\r\n    geometryData.scale_x,\r\n    geometryData.scale_y\r\n  );\r\n\r\n  // Adjust UVs if there is a UV region\r\n  if (defined(geometryData.uv0s) && defined(geometryData[\"uv-region\"])) {\r\n    cropUVs(\r\n      geometryData.vertexCount,\r\n      geometryData.uv0s,\r\n      geometryData[\"uv-region\"]\r\n    );\r\n  }\r\n\r\n  // Create the final buffer\r\n  const meshData = generateGltfBuffer(\r\n    geometryData.vertexCount,\r\n    geometryData.indices,\r\n    geometryData.positions,\r\n    geometryData.normals,\r\n    geometryData.uv0s,\r\n    geometryData.colors\r\n  );\r\n\r\n  const customAttributes = {};\r\n  if (defined(geometryData[\"feature-index\"])) {\r\n    customAttributes.positions = geometryData.positions;\r\n    customAttributes.indices = geometryData.indices;\r\n    customAttributes.featureIndex = geometryData[\"feature-index\"];\r\n    customAttributes.cartesianCenter = parameters.cartesianCenter;\r\n    customAttributes.parentRotation = parameters.parentRotation;\r\n  } else if (defined(geometryData[\"faceRange\"])) {\r\n    customAttributes.positions = geometryData.positions;\r\n    customAttributes.indices = geometryData.indices;\r\n    customAttributes.sourceURL = parameters.url;\r\n    customAttributes.cartesianCenter = parameters.cartesianCenter;\r\n    customAttributes.parentRotation = parameters.parentRotation;\r\n\r\n    // Build the feature index array from the faceRange.\r\n    customAttributes.featureIndex = new Array(geometryData.positions.length);\r\n    for (\r\n      let range = 0;\r\n      range < geometryData[\"faceRange\"].length - 1;\r\n      range += 2\r\n    ) {\r\n      const curIndex = range / 2;\r\n      const rangeStart = geometryData[\"faceRange\"][range];\r\n      const rangeEnd = geometryData[\"faceRange\"][range + 1];\r\n      for (let i = rangeStart; i <= rangeEnd; i++) {\r\n        customAttributes.featureIndex[i * 3] = curIndex;\r\n        customAttributes.featureIndex[i * 3 + 1] = curIndex;\r\n        customAttributes.featureIndex[i * 3 + 2] = curIndex;\r\n      }\r\n    }\r\n  }\r\n\r\n  meshData._customAttributes = customAttributes;\r\n\r\n  const results = {\r\n    meshData: meshData,\r\n  };\r\n\r\n  return results;\r\n}\r\n\r\nfunction initWorker(dracoModule) {\r\n  draco = dracoModule;\r\n  self.onmessage = createTaskProcessorWorker(decodeI3S);\r\n  self.postMessage(true);\r\n}\r\n\r\nfunction decodeI3SStart(event) {\r\n  const data = event.data;\r\n\r\n  // Expect the first message to be to load a web assembly module\r\n  const wasmConfig = data.webAssemblyConfig;\r\n  if (defined(wasmConfig)) {\r\n    // Require and compile WebAssembly module, or use fallback if not supported\r\n    return require([wasmConfig.modulePath], function (dracoModule) {\r\n      if (defined(wasmConfig.wasmBinaryFile)) {\r\n        if (!defined(dracoModule)) {\r\n          dracoModule = self.DracoDecoderModule;\r\n        }\r\n\r\n        dracoModule(wasmConfig).then(function (compiledModule) {\r\n          initWorker(compiledModule);\r\n        });\r\n      } else {\r\n        initWorker(dracoModule());\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nexport default decodeI3SStart;\r\n"],"names":["Cartesian3","WebMercatorProjection","Ellipsoid","Cartographic","CesiumMath","defined","Matrix3"],"mappings":"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"}