{"version":3,"file":"createBoxOutlineGeometry.js","sources":["../../../packages/engine/Source/Core/BoxOutlineGeometry.js","../../../packages/engine/Source/WorkersES6/createBoxOutlineGeometry.js"],"sourcesContent":["import BoundingSphere from \"./BoundingSphere.js\";\r\nimport Cartesian3 from \"./Cartesian3.js\";\r\nimport Check from \"./Check.js\";\r\nimport ComponentDatatype from \"./ComponentDatatype.js\";\r\nimport defaultValue from \"./defaultValue.js\";\r\nimport defined from \"./defined.js\";\r\nimport DeveloperError from \"./DeveloperError.js\";\r\nimport Geometry from \"./Geometry.js\";\r\nimport GeometryAttribute from \"./GeometryAttribute.js\";\r\nimport GeometryAttributes from \"./GeometryAttributes.js\";\r\nimport GeometryOffsetAttribute from \"./GeometryOffsetAttribute.js\";\r\nimport PrimitiveType from \"./PrimitiveType.js\";\r\n\r\nconst diffScratch = new Cartesian3();\r\n\r\n/**\r\n * A description of the outline of a cube centered at the origin.\r\n *\r\n * @alias BoxOutlineGeometry\r\n * @constructor\r\n *\r\n * @param {Object} options Object with the following properties:\r\n * @param {Cartesian3} options.minimum The minimum x, y, and z coordinates of the box.\r\n * @param {Cartesian3} options.maximum The maximum x, y, and z coordinates of the box.\r\n *\r\n * @see BoxOutlineGeometry.fromDimensions\r\n * @see BoxOutlineGeometry.createGeometry\r\n * @see Packable\r\n *\r\n * @example\r\n * const box = new Cesium.BoxOutlineGeometry({\r\n *   maximum : new Cesium.Cartesian3(250000.0, 250000.0, 250000.0),\r\n *   minimum : new Cesium.Cartesian3(-250000.0, -250000.0, -250000.0)\r\n * });\r\n * const geometry = Cesium.BoxOutlineGeometry.createGeometry(box);\r\n */\r\nfunction BoxOutlineGeometry(options) {\r\n  options = defaultValue(options, defaultValue.EMPTY_OBJECT);\r\n\r\n  const min = options.minimum;\r\n  const max = options.maximum;\r\n\r\n  //>>includeStart('debug', pragmas.debug);\r\n  Check.typeOf.object(\"min\", min);\r\n  Check.typeOf.object(\"max\", max);\r\n  if (\r\n    defined(options.offsetAttribute) &&\r\n    options.offsetAttribute === GeometryOffsetAttribute.TOP\r\n  ) {\r\n    throw new DeveloperError(\r\n      \"GeometryOffsetAttribute.TOP is not a supported options.offsetAttribute for this geometry.\"\r\n    );\r\n  }\r\n  //>>includeEnd('debug');\r\n\r\n  this._min = Cartesian3.clone(min);\r\n  this._max = Cartesian3.clone(max);\r\n  this._offsetAttribute = options.offsetAttribute;\r\n  this._workerName = \"createBoxOutlineGeometry\";\r\n}\r\n\r\n/**\r\n * Creates an outline of a cube centered at the origin given its dimensions.\r\n *\r\n * @param {Object} options Object with the following properties:\r\n * @param {Cartesian3} options.dimensions The width, depth, and height of the box stored in the x, y, and z coordinates of the <code>Cartesian3</code>, respectively.\r\n * @returns {BoxOutlineGeometry}\r\n *\r\n * @exception {DeveloperError} All dimensions components must be greater than or equal to zero.\r\n *\r\n *\r\n * @example\r\n * const box = Cesium.BoxOutlineGeometry.fromDimensions({\r\n *   dimensions : new Cesium.Cartesian3(500000.0, 500000.0, 500000.0)\r\n * });\r\n * const geometry = Cesium.BoxOutlineGeometry.createGeometry(box);\r\n *\r\n * @see BoxOutlineGeometry.createGeometry\r\n */\r\nBoxOutlineGeometry.fromDimensions = function (options) {\r\n  options = defaultValue(options, defaultValue.EMPTY_OBJECT);\r\n  const dimensions = options.dimensions;\r\n\r\n  //>>includeStart('debug', pragmas.debug);\r\n  Check.typeOf.object(\"dimensions\", dimensions);\r\n  Check.typeOf.number.greaterThanOrEquals(\"dimensions.x\", dimensions.x, 0);\r\n  Check.typeOf.number.greaterThanOrEquals(\"dimensions.y\", dimensions.y, 0);\r\n  Check.typeOf.number.greaterThanOrEquals(\"dimensions.z\", dimensions.z, 0);\r\n  //>>includeEnd('debug');\r\n\r\n  const corner = Cartesian3.multiplyByScalar(dimensions, 0.5, new Cartesian3());\r\n\r\n  return new BoxOutlineGeometry({\r\n    minimum: Cartesian3.negate(corner, new Cartesian3()),\r\n    maximum: corner,\r\n    offsetAttribute: options.offsetAttribute,\r\n  });\r\n};\r\n\r\n/**\r\n * Creates an outline of a cube from the dimensions of an AxisAlignedBoundingBox.\r\n *\r\n * @param {AxisAlignedBoundingBox} boundingBox A description of the AxisAlignedBoundingBox.\r\n * @returns {BoxOutlineGeometry}\r\n *\r\n *\r\n *\r\n * @example\r\n * const aabb = Cesium.AxisAlignedBoundingBox.fromPoints(Cesium.Cartesian3.fromDegreesArray([\r\n *      -72.0, 40.0,\r\n *      -70.0, 35.0,\r\n *      -75.0, 30.0,\r\n *      -70.0, 30.0,\r\n *      -68.0, 40.0\r\n * ]));\r\n * const box = Cesium.BoxOutlineGeometry.fromAxisAlignedBoundingBox(aabb);\r\n *\r\n *  @see BoxOutlineGeometry.createGeometry\r\n */\r\nBoxOutlineGeometry.fromAxisAlignedBoundingBox = function (boundingBox) {\r\n  //>>includeStart('debug', pragmas.debug);\r\n  Check.typeOf.object(\"boundindBox\", boundingBox);\r\n  //>>includeEnd('debug');\r\n\r\n  return new BoxOutlineGeometry({\r\n    minimum: boundingBox.minimum,\r\n    maximum: boundingBox.maximum,\r\n  });\r\n};\r\n\r\n/**\r\n * The number of elements used to pack the object into an array.\r\n * @type {Number}\r\n */\r\nBoxOutlineGeometry.packedLength = 2 * Cartesian3.packedLength + 1;\r\n\r\n/**\r\n * Stores the provided instance into the provided array.\r\n *\r\n * @param {BoxOutlineGeometry} value The value to pack.\r\n * @param {Number[]} array The array to pack into.\r\n * @param {Number} [startingIndex=0] The index into the array at which to start packing the elements.\r\n *\r\n * @returns {Number[]} The array that was packed into\r\n */\r\nBoxOutlineGeometry.pack = function (value, array, startingIndex) {\r\n  //>>includeStart('debug', pragmas.debug);\r\n  Check.typeOf.object(\"value\", value);\r\n  Check.defined(\"array\", array);\r\n  //>>includeEnd('debug');\r\n\r\n  startingIndex = defaultValue(startingIndex, 0);\r\n\r\n  Cartesian3.pack(value._min, array, startingIndex);\r\n  Cartesian3.pack(value._max, array, startingIndex + Cartesian3.packedLength);\r\n  array[startingIndex + Cartesian3.packedLength * 2] = defaultValue(\r\n    value._offsetAttribute,\r\n    -1\r\n  );\r\n\r\n  return array;\r\n};\r\n\r\nconst scratchMin = new Cartesian3();\r\nconst scratchMax = new Cartesian3();\r\nconst scratchOptions = {\r\n  minimum: scratchMin,\r\n  maximum: scratchMax,\r\n  offsetAttribute: undefined,\r\n};\r\n\r\n/**\r\n * Retrieves an instance from a packed array.\r\n *\r\n * @param {Number[]} array The packed array.\r\n * @param {Number} [startingIndex=0] The starting index of the element to be unpacked.\r\n * @param {BoxOutlineGeometry} [result] The object into which to store the result.\r\n * @returns {BoxOutlineGeometry} The modified result parameter or a new BoxOutlineGeometry instance if one was not provided.\r\n */\r\nBoxOutlineGeometry.unpack = function (array, startingIndex, result) {\r\n  //>>includeStart('debug', pragmas.debug);\r\n  Check.defined(\"array\", array);\r\n  //>>includeEnd('debug');\r\n\r\n  startingIndex = defaultValue(startingIndex, 0);\r\n\r\n  const min = Cartesian3.unpack(array, startingIndex, scratchMin);\r\n  const max = Cartesian3.unpack(\r\n    array,\r\n    startingIndex + Cartesian3.packedLength,\r\n    scratchMax\r\n  );\r\n  const offsetAttribute = array[startingIndex + Cartesian3.packedLength * 2];\r\n\r\n  if (!defined(result)) {\r\n    scratchOptions.offsetAttribute =\r\n      offsetAttribute === -1 ? undefined : offsetAttribute;\r\n    return new BoxOutlineGeometry(scratchOptions);\r\n  }\r\n\r\n  result._min = Cartesian3.clone(min, result._min);\r\n  result._max = Cartesian3.clone(max, result._max);\r\n  result._offsetAttribute =\r\n    offsetAttribute === -1 ? undefined : offsetAttribute;\r\n\r\n  return result;\r\n};\r\n\r\n/**\r\n * Computes the geometric representation of an outline of a box, including its vertices, indices, and a bounding sphere.\r\n *\r\n * @param {BoxOutlineGeometry} boxGeometry A description of the box outline.\r\n * @returns {Geometry|undefined} The computed vertices and indices.\r\n */\r\nBoxOutlineGeometry.createGeometry = function (boxGeometry) {\r\n  const min = boxGeometry._min;\r\n  const max = boxGeometry._max;\r\n\r\n  if (Cartesian3.equals(min, max)) {\r\n    return;\r\n  }\r\n\r\n  const attributes = new GeometryAttributes();\r\n  const indices = new Uint16Array(12 * 2);\r\n  const positions = new Float64Array(8 * 3);\r\n\r\n  positions[0] = min.x;\r\n  positions[1] = min.y;\r\n  positions[2] = min.z;\r\n  positions[3] = max.x;\r\n  positions[4] = min.y;\r\n  positions[5] = min.z;\r\n  positions[6] = max.x;\r\n  positions[7] = max.y;\r\n  positions[8] = min.z;\r\n  positions[9] = min.x;\r\n  positions[10] = max.y;\r\n  positions[11] = min.z;\r\n\r\n  positions[12] = min.x;\r\n  positions[13] = min.y;\r\n  positions[14] = max.z;\r\n  positions[15] = max.x;\r\n  positions[16] = min.y;\r\n  positions[17] = max.z;\r\n  positions[18] = max.x;\r\n  positions[19] = max.y;\r\n  positions[20] = max.z;\r\n  positions[21] = min.x;\r\n  positions[22] = max.y;\r\n  positions[23] = max.z;\r\n\r\n  attributes.position = new GeometryAttribute({\r\n    componentDatatype: ComponentDatatype.DOUBLE,\r\n    componentsPerAttribute: 3,\r\n    values: positions,\r\n  });\r\n\r\n  // top\r\n  indices[0] = 4;\r\n  indices[1] = 5;\r\n  indices[2] = 5;\r\n  indices[3] = 6;\r\n  indices[4] = 6;\r\n  indices[5] = 7;\r\n  indices[6] = 7;\r\n  indices[7] = 4;\r\n\r\n  // bottom\r\n  indices[8] = 0;\r\n  indices[9] = 1;\r\n  indices[10] = 1;\r\n  indices[11] = 2;\r\n  indices[12] = 2;\r\n  indices[13] = 3;\r\n  indices[14] = 3;\r\n  indices[15] = 0;\r\n\r\n  // left\r\n  indices[16] = 0;\r\n  indices[17] = 4;\r\n  indices[18] = 1;\r\n  indices[19] = 5;\r\n\r\n  //right\r\n  indices[20] = 2;\r\n  indices[21] = 6;\r\n  indices[22] = 3;\r\n  indices[23] = 7;\r\n\r\n  const diff = Cartesian3.subtract(max, min, diffScratch);\r\n  const radius = Cartesian3.magnitude(diff) * 0.5;\r\n\r\n  if (defined(boxGeometry._offsetAttribute)) {\r\n    const length = positions.length;\r\n    const offsetValue =\r\n      boxGeometry._offsetAttribute === GeometryOffsetAttribute.NONE ? 0 : 1;\r\n    const applyOffset = new Uint8Array(length / 3).fill(offsetValue);\r\n    attributes.applyOffset = new GeometryAttribute({\r\n      componentDatatype: ComponentDatatype.UNSIGNED_BYTE,\r\n      componentsPerAttribute: 1,\r\n      values: applyOffset,\r\n    });\r\n  }\r\n\r\n  return new Geometry({\r\n    attributes: attributes,\r\n    indices: indices,\r\n    primitiveType: PrimitiveType.LINES,\r\n    boundingSphere: new BoundingSphere(Cartesian3.ZERO, radius),\r\n    offsetAttribute: boxGeometry._offsetAttribute,\r\n  });\r\n};\r\nexport default BoxOutlineGeometry;\r\n","import BoxOutlineGeometry from \"../Core/BoxOutlineGeometry.js\";\r\nimport defined from \"../Core/defined.js\";\r\n\r\nfunction createBoxOutlineGeometry(boxGeometry, offset) {\r\n  if (defined(offset)) {\r\n    boxGeometry = BoxOutlineGeometry.unpack(boxGeometry, offset);\r\n  }\r\n  return BoxOutlineGeometry.createGeometry(boxGeometry);\r\n}\r\nexport default createBoxOutlineGeometry;\r\n"],"names":["Cartesian3","defaultValue","Check","defined","GeometryOffsetAttribute","DeveloperError","GeometryAttributes","GeometryAttribute","ComponentDatatype","Geometry","PrimitiveType","BoundingSphere"],"mappings":";;EAaA,MAAM,WAAW,GAAG,IAAIA,kBAAU,EAAE,CAAC;AACrC;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA,SAAS,kBAAkB,CAAC,OAAO,EAAE;EACrC,EAAE,OAAO,GAAGC,yBAAY,CAAC,OAAO,EAAEA,yBAAY,CAAC,YAAY,CAAC,CAAC;AAC7D;EACA,EAAE,MAAM,GAAG,GAAG,OAAO,CAAC,OAAO,CAAC;EAC9B,EAAE,MAAM,GAAG,GAAG,OAAO,CAAC,OAAO,CAAC;AAC9B;EACA;EACA,EAAEC,WAAK,CAAC,MAAM,CAAC,MAAM,CAAC,KAAK,EAAE,GAAG,CAAC,CAAC;EAClC,EAAEA,WAAK,CAAC,MAAM,CAAC,MAAM,CAAC,KAAK,EAAE,GAAG,CAAC,CAAC;EAClC,EAAE;EACF,IAAIC,oBAAO,CAAC,OAAO,CAAC,eAAe,CAAC;EACpC,IAAI,OAAO,CAAC,eAAe,KAAKC,+CAAuB,CAAC,GAAG;EAC3D,IAAI;EACJ,IAAI,MAAM,IAAIC,oBAAc;EAC5B,MAAM,2FAA2F;EACjG,KAAK,CAAC;EACN,GAAG;EACH;AACA;EACA,EAAE,IAAI,CAAC,IAAI,GAAGL,kBAAU,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;EACpC,EAAE,IAAI,CAAC,IAAI,GAAGA,kBAAU,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;EACpC,EAAE,IAAI,CAAC,gBAAgB,GAAG,OAAO,CAAC,eAAe,CAAC;EAClD,EAAE,IAAI,CAAC,WAAW,GAAG,0BAA0B,CAAC;EAChD,CAAC;AACD;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA,kBAAkB,CAAC,cAAc,GAAG,UAAU,OAAO,EAAE;EACvD,EAAE,OAAO,GAAGC,yBAAY,CAAC,OAAO,EAAEA,yBAAY,CAAC,YAAY,CAAC,CAAC;EAC7D,EAAE,MAAM,UAAU,GAAG,OAAO,CAAC,UAAU,CAAC;AACxC;EACA;EACA,EAAEC,WAAK,CAAC,MAAM,CAAC,MAAM,CAAC,YAAY,EAAE,UAAU,CAAC,CAAC;EAChD,EAAEA,WAAK,CAAC,MAAM,CAAC,MAAM,CAAC,mBAAmB,CAAC,cAAc,EAAE,UAAU,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;EAC3E,EAAEA,WAAK,CAAC,MAAM,CAAC,MAAM,CAAC,mBAAmB,CAAC,cAAc,EAAE,UAAU,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;EAC3E,EAAEA,WAAK,CAAC,MAAM,CAAC,MAAM,CAAC,mBAAmB,CAAC,cAAc,EAAE,UAAU,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;EAC3E;AACA;EACA,EAAE,MAAM,MAAM,GAAGF,kBAAU,CAAC,gBAAgB,CAAC,UAAU,EAAE,GAAG,EAAE,IAAIA,kBAAU,EAAE,CAAC,CAAC;AAChF;EACA,EAAE,OAAO,IAAI,kBAAkB,CAAC;EAChC,IAAI,OAAO,EAAEA,kBAAU,CAAC,MAAM,CAAC,MAAM,EAAE,IAAIA,kBAAU,EAAE,CAAC;EACxD,IAAI,OAAO,EAAE,MAAM;EACnB,IAAI,eAAe,EAAE,OAAO,CAAC,eAAe;EAC5C,GAAG,CAAC,CAAC;EACL,CAAC,CAAC;AACF;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA,kBAAkB,CAAC,0BAA0B,GAAG,UAAU,WAAW,EAAE;EACvE;EACA,EAAEE,WAAK,CAAC,MAAM,CAAC,MAAM,CAAC,aAAa,EAAE,WAAW,CAAC,CAAC;EAClD;AACA;EACA,EAAE,OAAO,IAAI,kBAAkB,CAAC;EAChC,IAAI,OAAO,EAAE,WAAW,CAAC,OAAO;EAChC,IAAI,OAAO,EAAE,WAAW,CAAC,OAAO;EAChC,GAAG,CAAC,CAAC;EACL,CAAC,CAAC;AACF;EACA;EACA;EACA;EACA;EACA,kBAAkB,CAAC,YAAY,GAAG,CAAC,GAAGF,kBAAU,CAAC,YAAY,GAAG,CAAC,CAAC;AAClE;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA,kBAAkB,CAAC,IAAI,GAAG,UAAU,KAAK,EAAE,KAAK,EAAE,aAAa,EAAE;EACjE;EACA,EAAEE,WAAK,CAAC,MAAM,CAAC,MAAM,CAAC,OAAO,EAAE,KAAK,CAAC,CAAC;EACtC,EAAEA,WAAK,CAAC,OAAO,CAAC,OAAO,EAAE,KAAK,CAAC,CAAC;EAChC;AACA;EACA,EAAE,aAAa,GAAGD,yBAAY,CAAC,aAAa,EAAE,CAAC,CAAC,CAAC;AACjD;EACA,EAAED,kBAAU,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,EAAE,KAAK,EAAE,aAAa,CAAC,CAAC;EACpD,EAAEA,kBAAU,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,EAAE,KAAK,EAAE,aAAa,GAAGA,kBAAU,CAAC,YAAY,CAAC,CAAC;EAC9E,EAAE,KAAK,CAAC,aAAa,GAAGA,kBAAU,CAAC,YAAY,GAAG,CAAC,CAAC,GAAGC,yBAAY;EACnE,IAAI,KAAK,CAAC,gBAAgB;EAC1B,IAAI,CAAC,CAAC;EACN,GAAG,CAAC;AACJ;EACA,EAAE,OAAO,KAAK,CAAC;EACf,CAAC,CAAC;AACF;EACA,MAAM,UAAU,GAAG,IAAID,kBAAU,EAAE,CAAC;EACpC,MAAM,UAAU,GAAG,IAAIA,kBAAU,EAAE,CAAC;EACpC,MAAM,cAAc,GAAG;EACvB,EAAE,OAAO,EAAE,UAAU;EACrB,EAAE,OAAO,EAAE,UAAU;EACrB,EAAE,eAAe,EAAE,SAAS;EAC5B,CAAC,CAAC;AACF;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA,kBAAkB,CAAC,MAAM,GAAG,UAAU,KAAK,EAAE,aAAa,EAAE,MAAM,EAAE;EACpE;EACA,EAAEE,WAAK,CAAC,OAAO,CAAC,OAAO,EAAE,KAAK,CAAC,CAAC;EAChC;AACA;EACA,EAAE,aAAa,GAAGD,yBAAY,CAAC,aAAa,EAAE,CAAC,CAAC,CAAC;AACjD;EACA,EAAE,MAAM,GAAG,GAAGD,kBAAU,CAAC,MAAM,CAAC,KAAK,EAAE,aAAa,EAAE,UAAU,CAAC,CAAC;EAClE,EAAE,MAAM,GAAG,GAAGA,kBAAU,CAAC,MAAM;EAC/B,IAAI,KAAK;EACT,IAAI,aAAa,GAAGA,kBAAU,CAAC,YAAY;EAC3C,IAAI,UAAU;EACd,GAAG,CAAC;EACJ,EAAE,MAAM,eAAe,GAAG,KAAK,CAAC,aAAa,GAAGA,kBAAU,CAAC,YAAY,GAAG,CAAC,CAAC,CAAC;AAC7E;EACA,EAAE,IAAI,CAACG,oBAAO,CAAC,MAAM,CAAC,EAAE;EACxB,IAAI,cAAc,CAAC,eAAe;EAClC,MAAM,eAAe,KAAK,CAAC,CAAC,GAAG,SAAS,GAAG,eAAe,CAAC;EAC3D,IAAI,OAAO,IAAI,kBAAkB,CAAC,cAAc,CAAC,CAAC;EAClD,GAAG;AACH;EACA,EAAE,MAAM,CAAC,IAAI,GAAGH,kBAAU,CAAC,KAAK,CAAC,GAAG,EAAE,MAAM,CAAC,IAAI,CAAC,CAAC;EACnD,EAAE,MAAM,CAAC,IAAI,GAAGA,kBAAU,CAAC,KAAK,CAAC,GAAG,EAAE,MAAM,CAAC,IAAI,CAAC,CAAC;EACnD,EAAE,MAAM,CAAC,gBAAgB;EACzB,IAAI,eAAe,KAAK,CAAC,CAAC,GAAG,SAAS,GAAG,eAAe,CAAC;AACzD;EACA,EAAE,OAAO,MAAM,CAAC;EAChB,CAAC,CAAC;AACF;EACA;EACA;EACA;EACA;EACA;EACA;EACA,kBAAkB,CAAC,cAAc,GAAG,UAAU,WAAW,EAAE;EAC3D,EAAE,MAAM,GAAG,GAAG,WAAW,CAAC,IAAI,CAAC;EAC/B,EAAE,MAAM,GAAG,GAAG,WAAW,CAAC,IAAI,CAAC;AAC/B;EACA,EAAE,IAAIA,kBAAU,CAAC,MAAM,CAAC,GAAG,EAAE,GAAG,CAAC,EAAE;EACnC,IAAI,OAAO;EACX,GAAG;AACH;EACA,EAAE,MAAM,UAAU,GAAG,IAAIM,qCAAkB,EAAE,CAAC;EAC9C,EAAE,MAAM,OAAO,GAAG,IAAI,WAAW,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC;EAC1C,EAAE,MAAM,SAAS,GAAG,IAAI,YAAY,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;AAC5C;EACA,EAAE,SAAS,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC;EACvB,EAAE,SAAS,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC;EACvB,EAAE,SAAS,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC;EACvB,EAAE,SAAS,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC;EACvB,EAAE,SAAS,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC;EACvB,EAAE,SAAS,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC;EACvB,EAAE,SAAS,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC;EACvB,EAAE,SAAS,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC;EACvB,EAAE,SAAS,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC;EACvB,EAAE,SAAS,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC;EACvB,EAAE,SAAS,CAAC,EAAE,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC;EACxB,EAAE,SAAS,CAAC,EAAE,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC;AACxB;EACA,EAAE,SAAS,CAAC,EAAE,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC;EACxB,EAAE,SAAS,CAAC,EAAE,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC;EACxB,EAAE,SAAS,CAAC,EAAE,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC;EACxB,EAAE,SAAS,CAAC,EAAE,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC;EACxB,EAAE,SAAS,CAAC,EAAE,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC;EACxB,EAAE,SAAS,CAAC,EAAE,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC;EACxB,EAAE,SAAS,CAAC,EAAE,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC;EACxB,EAAE,SAAS,CAAC,EAAE,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC;EACxB,EAAE,SAAS,CAAC,EAAE,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC;EACxB,EAAE,SAAS,CAAC,EAAE,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC;EACxB,EAAE,SAAS,CAAC,EAAE,CAAC,GAAG,GAAG,CAA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"}